"use strict";(self.webpackChunkarrestpro=self.webpackChunkarrestpro||[]).push([[522],{522:(s,t,e)=>{e.r(t),e.d(t,{NativeAudioWeb:()=>i});var a=e(403);class o{constructor(s){this.audio=s}}class i extends a.E_{async resume(s){const t=this.getAudioAsset(s.assetId).audio;if(t.paused)return t.play()}async pause(s){return this.getAudioAsset(s.assetId).audio.pause()}async getCurrentTime(s){return{currentTime:this.getAudioAsset(s.assetId).audio.currentTime}}async getDuration(s){const t=this.getAudioAsset(s.assetId).audio;if(Number.isNaN(t.duration))throw"no duration available";if(!Number.isFinite(t.duration))throw"duration not available => media resource is streaming";return{duration:t.duration}}async configure(s){throw`configure is not supported for web: ${JSON.stringify(s)}`}async preload(s){var t;if(i.AUDIO_ASSET_BY_ASSET_ID.has(s.assetId))throw"AssetId already exists. Unload first if like to change!";if(!(null===(t=s.assetPath)||void 0===t?void 0:t.length))throw"no assetPath provided";if(!s.isUrl&&!new RegExp("^/?"+i.FILE_LOCATION).test(s.assetPath)){const t=s.assetPath.startsWith("/")?"":"/";s.assetPath=`${i.FILE_LOCATION}${t}${s.assetPath}`}const e=new Audio(s.assetPath);e.autoplay=!1,e.loop=!1,e.preload="auto",s.volume&&(e.volume=s.volume),i.AUDIO_ASSET_BY_ASSET_ID.set(s.assetId,new o(e))}async play(s){var t;const e=this.getAudioAsset(s.assetId).audio;return await this.stop(s),e.loop=!1,e.currentTime=null!==(t=s.time)&&void 0!==t?t:0,e.play()}async loop(s){const t=this.getAudioAsset(s.assetId).audio;return await this.stop(s),t.loop=!0,t.play()}async stop(s){const t=this.getAudioAsset(s.assetId).audio;t.pause(),t.loop=!1,t.currentTime=0}async unload(s){await this.stop(s),i.AUDIO_ASSET_BY_ASSET_ID.delete(s.assetId)}async setVolume(s){if("number"!==typeof(null===s||void 0===s?void 0:s.volume))throw"no volume provided";this.getAudioAsset(s.assetId).audio.volume=s.volume}async isPlaying(s){return{isPlaying:!this.getAudioAsset(s.assetId).audio.paused}}getAudioAsset(s){if(this.checkAssetId(s),!i.AUDIO_ASSET_BY_ASSET_ID.has(s))throw`no asset for assetId "${s}" available. Call preload first!`;return i.AUDIO_ASSET_BY_ASSET_ID.get(s)}checkAssetId(s){if("string"!==typeof s)throw"assetId must be a string";if(!(null===s||void 0===s?void 0:s.length))throw"no assetId provided"}}i.FILE_LOCATION="assets/sounds",i.AUDIO_ASSET_BY_ASSET_ID=new Map}}]);
//# sourceMappingURL=522.d2a4a962.chunk.js.map