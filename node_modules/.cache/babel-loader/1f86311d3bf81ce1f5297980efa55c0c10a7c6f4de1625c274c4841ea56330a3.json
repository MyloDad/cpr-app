{"ast":null,"code":"var _jsxFileName = \"/Users/davidhelmers/arrestpro/src/components/Buttons/ResetButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { RotateCcw } from 'lucide-react';\nimport { useAppState } from '../../context/AppStateContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetButton = () => {\n  _s();\n  const {\n    resetAllFeatures,\n    refreshTrigger,\n    COLORS\n  } = useAppState();\n  const [showConfirm, setShowConfirm] = useState(false);\n\n  // Debug effect to monitor when resetAllFeatures changes\n  useEffect(() => {\n    console.log(\"ResetButton: resetAllFeatures type =\", typeof resetAllFeatures);\n  }, [resetAllFeatures]);\n\n  // Monitor refresh trigger\n  useEffect(() => {\n    console.log(\"ResetButton: Refresh trigger updated =\", refreshTrigger);\n  }, [refreshTrigger]);\n  const handleResetClick = () => {\n    if (!showConfirm) {\n      console.log(\"Step 1: First click - showing confirmation\");\n      setShowConfirm(true);\n      // Auto-hide confirmation after 3 seconds if not clicked\n      setTimeout(() => {\n        console.log(\"Confirmation timeout - hiding confirmation\");\n        setShowConfirm(false);\n      }, 3000);\n    } else {\n      console.log(\"Step 2: Confirm click - calling resetAllFeatures\");\n\n      // Make sure resetAllFeatures is a function before calling it\n      if (typeof resetAllFeatures === 'function') {\n        try {\n          resetAllFeatures();\n          console.log(\"resetAllFeatures called successfully\");\n\n          // Force a UI refresh with a DOM update\n          setTimeout(() => {\n            window.dispatchEvent(new Event('resize'));\n            console.log(\"Window resize event dispatched to force UI update\");\n          }, 100);\n        } catch (error) {\n          console.error(\"Error calling resetAllFeatures:\", error);\n        }\n      } else {\n        console.error(\"resetAllFeatures is not a function:\", resetAllFeatures);\n      }\n      setShowConfirm(false);\n    }\n  };\n\n  // Add a hard reset option for testing\n  const forceHardReset = () => {\n    try {\n      // Force page reload - last resort approach\n      window.location.reload();\n    } catch (e) {\n      console.error(\"Error during hard reset:\", e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleResetClick,\n      style: {\n        position: 'fixed',\n        bottom: '20px',\n        right: '20px',\n        borderRadius: '50%',\n        width: '48px',\n        height: '48px',\n        backgroundColor: showConfirm ? COLORS.logoRed : COLORS.timerBg,\n        color: COLORS.white,\n        border: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        boxShadow: '0 2px 6px rgba(0,0,0,0.3)',\n        cursor: 'pointer',\n        transition: 'all 0.2s ease',\n        zIndex: 1000\n      },\n      children: [/*#__PURE__*/_jsxDEV(RotateCcw, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), showConfirm && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '-40px',\n          right: '0',\n          backgroundColor: COLORS.logoRed,\n          color: COLORS.white,\n          padding: '4px 8px',\n          borderRadius: '4px',\n          fontSize: '12px',\n          whiteSpace: 'nowrap'\n        },\n        children: \"Tap again to reset all\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), process.env.NODE_ENV !== 'production' && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: forceHardReset,\n      onDoubleClick: forceHardReset // Require double-click for safety\n      ,\n      style: {\n        position: 'fixed',\n        bottom: '80px',\n        right: '20px',\n        padding: '4px 8px',\n        backgroundColor: '#333',\n        color: '#fff',\n        border: 'none',\n        borderRadius: '4px',\n        fontSize: '10px',\n        opacity: 0.5,\n        cursor: 'pointer',\n        zIndex: 1000\n      },\n      children: \"Emergency Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetButton, \"g7STht/PauIZDlqbCYqfvJ6zhio=\", false, function () {\n  return [useAppState];\n});\n_c = ResetButton;\nexport default ResetButton;\nvar _c;\n$RefreshReg$(_c, \"ResetButton\");","map":{"version":3,"names":["React","useState","useEffect","RotateCcw","useAppState","jsxDEV","_jsxDEV","ResetButton","_s","resetAllFeatures","refreshTrigger","COLORS","showConfirm","setShowConfirm","console","log","handleResetClick","setTimeout","window","dispatchEvent","Event","error","forceHardReset","location","reload","e","children","onClick","style","position","bottom","right","borderRadius","width","height","backgroundColor","logoRed","timerBg","color","white","border","display","alignItems","justifyContent","boxShadow","cursor","transition","zIndex","size","fileName","_jsxFileName","lineNumber","columnNumber","top","padding","fontSize","whiteSpace","process","env","NODE_ENV","onDoubleClick","opacity","_c","$RefreshReg$"],"sources":["/Users/davidhelmers/arrestpro/src/components/Buttons/ResetButton.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { RotateCcw } from 'lucide-react';\nimport { useAppState } from '../../context/AppStateContext';\n\nconst ResetButton = () => {\n  const { resetAllFeatures, refreshTrigger, COLORS } = useAppState();\n  const [showConfirm, setShowConfirm] = useState(false);\n  \n  // Debug effect to monitor when resetAllFeatures changes\n  useEffect(() => {\n    console.log(\"ResetButton: resetAllFeatures type =\", typeof resetAllFeatures);\n  }, [resetAllFeatures]);\n  \n  // Monitor refresh trigger\n  useEffect(() => {\n    console.log(\"ResetButton: Refresh trigger updated =\", refreshTrigger);\n  }, [refreshTrigger]);\n  \n  const handleResetClick = () => {\n    if (!showConfirm) {\n      console.log(\"Step 1: First click - showing confirmation\");\n      setShowConfirm(true);\n      // Auto-hide confirmation after 3 seconds if not clicked\n      setTimeout(() => {\n        console.log(\"Confirmation timeout - hiding confirmation\");\n        setShowConfirm(false);\n      }, 3000);\n    } else {\n      console.log(\"Step 2: Confirm click - calling resetAllFeatures\");\n      \n      // Make sure resetAllFeatures is a function before calling it\n      if (typeof resetAllFeatures === 'function') {\n        try {\n          resetAllFeatures();\n          console.log(\"resetAllFeatures called successfully\");\n          \n          // Force a UI refresh with a DOM update\n          setTimeout(() => {\n            window.dispatchEvent(new Event('resize'));\n            console.log(\"Window resize event dispatched to force UI update\");\n          }, 100);\n        } catch (error) {\n          console.error(\"Error calling resetAllFeatures:\", error);\n        }\n      } else {\n        console.error(\"resetAllFeatures is not a function:\", resetAllFeatures);\n      }\n      \n      setShowConfirm(false);\n    }\n  };\n\n  // Add a hard reset option for testing\n  const forceHardReset = () => {\n    try {\n      // Force page reload - last resort approach\n      window.location.reload();\n    } catch (e) {\n      console.error(\"Error during hard reset:\", e);\n    }\n  };\n\n  return (\n    <div>\n      <button\n        onClick={handleResetClick}\n        style={{\n          position: 'fixed',\n          bottom: '20px',\n          right: '20px',\n          borderRadius: '50%',\n          width: '48px',\n          height: '48px',\n          backgroundColor: showConfirm ? COLORS.logoRed : COLORS.timerBg,\n          color: COLORS.white,\n          border: 'none',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          boxShadow: '0 2px 6px rgba(0,0,0,0.3)',\n          cursor: 'pointer',\n          transition: 'all 0.2s ease',\n          zIndex: 1000\n        }}\n      >\n        <RotateCcw size={24} />\n        {showConfirm && (\n          <div\n            style={{\n              position: 'absolute',\n              top: '-40px',\n              right: '0',\n              backgroundColor: COLORS.logoRed,\n              color: COLORS.white,\n              padding: '4px 8px',\n              borderRadius: '4px',\n              fontSize: '12px',\n              whiteSpace: 'nowrap'\n            }}\n          >\n            Tap again to reset all\n          </div>\n        )}\n      </button>\n      \n      {/* Hidden emergency reset button - only show in development */}\n      {process.env.NODE_ENV !== 'production' && (\n        <button\n          onClick={forceHardReset}\n          onDoubleClick={forceHardReset} // Require double-click for safety\n          style={{\n            position: 'fixed',\n            bottom: '80px',\n            right: '20px',\n            padding: '4px 8px',\n            backgroundColor: '#333',\n            color: '#fff',\n            border: 'none',\n            borderRadius: '4px',\n            fontSize: '10px',\n            opacity: 0.5,\n            cursor: 'pointer',\n            zIndex: 1000\n          }}\n        >\n          Emergency Reset\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default ResetButton;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}