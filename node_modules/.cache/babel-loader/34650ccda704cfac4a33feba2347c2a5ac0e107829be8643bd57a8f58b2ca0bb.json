{"ast":null,"code":"var _jsxFileName = \"/Users/davidhelmers/arrestpro/src/CPRTempoApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { HeartPulse, Clock, Syringe, Wind } from 'lucide-react';\nimport styles from './CPRTempoApp.module.css';\n\n// Create a simplified version that will definitely compile\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CPRTempoApp = () => {\n  _s();\n  // State variables\n  const [activeSection, setActiveSection] = useState(null);\n  const [seconds, setSeconds] = useState(0);\n  const [pulseCheckTime, setPulseCheckTime] = useState(120); // 2 minutes countdown\n  const [pauseTime, setPauseTime] = useState(10); // 10 second pause countdown\n  const [metronomeRunning, setMetronomeRunning] = useState(false);\n  const [ventilationActive, setVentilationActive] = useState(false);\n  const [ventilationRate, setVentilationRate] = useState(11); // Default ventilation rate\n  const [showChargeMonitor, setShowChargeMonitor] = useState(false);\n  const [epiActive, setEpiActive] = useState(false);\n  const [epiTime, setEpiTime] = useState(300); // 5 minutes countdown\n  const [epiCycles, setEpiCycles] = useState(0); // Counter for epinephrine cycles\n  const [clockStarted, setClockStarted] = useState(false);\n  const [startTime, setStartTime] = useState(null); // Track when the metronome was started\n  const [countdownAnnounced, setCountdownAnnounced] = useState({\n    5: false,\n    4: false,\n    3: false,\n    2: false,\n    1: false\n  }); // Track announced numbers\n  const [confirmReset, setConfirmReset] = useState(false); // State for reset confirmation\n\n  // Refs for safer interval handling\n  const audioContextRef = useRef(null);\n  const timerIntervalRef = useRef(null);\n  const pulseIntervalRef = useRef(null);\n  const ventilationIntervalRef = useRef(null);\n  const epiIntervalRef = useRef(null);\n  const clockIntervalRef = useRef(null);\n  const lastSpeechRef = useRef(\"\");\n\n  // Play speech synthesis - prevent duplicates by tracking last phrase\n  const playSpeech = useCallback(text => {\n    // Don't repeat the same text twice in a row\n    if (lastSpeechRef.current === text) {\n      return;\n    }\n    if ('speechSynthesis' in window) {\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.rate = 1.0;\n      utterance.volume = 1.0;\n      window.speechSynthesis.speak(utterance);\n      lastSpeechRef.current = text;\n    }\n  }, []);\n\n  // Create audio context\n  const createAudioContext = useCallback(() => {\n    if (!audioContextRef.current) {\n      try {\n        audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      } catch (e) {\n        console.error(\"Failed to create audio context:\", e);\n      }\n    }\n    return audioContextRef.current;\n  }, []);\n\n  // Get audio context\n  const getAudioContext = useCallback(() => {\n    return audioContextRef.current;\n  }, []);\n\n  // Start the main clock\n  const startClock = useCallback(() => {\n    if (clockIntervalRef.current) {\n      clearInterval(clockIntervalRef.current);\n    }\n    const interval = setInterval(() => {\n      setSeconds(prev => prev + 1);\n    }, 1000);\n    clockIntervalRef.current = interval;\n    setClockStarted(true);\n  }, []);\n\n  // Reset the main clock - with confirmation\n  const resetClock = useCallback(() => {\n    setSeconds(0);\n    setConfirmReset(false);\n\n    // Only start the clock if there's an active feature\n    if (!clockStarted && (activeSection || ventilationActive || epiActive)) {\n      startClock();\n    } else if (!activeSection && !ventilationActive && !epiActive) {\n      // If everything is inactive, just reset without starting\n      if (clockIntervalRef.current) {\n        clearInterval(clockIntervalRef.current);\n        clockIntervalRef.current = null;\n      }\n      setClockStarted(false);\n    }\n  }, [clockStarted, startClock, activeSection, ventilationActive, epiActive]);\n\n  // Handle timer click to show confirmation\n  const handleTimerClick = useCallback(() => {\n    // If timer is already at 0, no need for confirmation\n    if (seconds === 0) return;\n\n    // Show confirmation dialog\n    setConfirmReset(true);\n  }, [seconds]);\n\n  // Cancel reset\n  const cancelReset = useCallback(() => {\n    setConfirmReset(false);\n  }, []);\n\n  // Toggle ventilation\n  const toggleVentilation = useCallback(() => {\n    // Start the main timer if this is the first feature activated\n    if (!clockStarted && !activeSection && !ventilationActive && !epiActive) {\n      startClock();\n    }\n    setVentilationActive(prev => !prev);\n  }, [clockStarted, startClock, activeSection, ventilationActive, epiActive]);\n\n  // Play metronome click\n  const playMetronomeClick = useCallback(() => {\n    try {\n      const ctx = getAudioContext() || createAudioContext();\n      if (!ctx) return;\n      if (ctx.state === 'suspended') {\n        ctx.resume();\n      }\n      const oscillator = ctx.createOscillator();\n      oscillator.type = 'sine';\n      oscillator.frequency.value = 800;\n      oscillator.connect(ctx.destination);\n      oscillator.start();\n      oscillator.stop(ctx.currentTime + 0.05);\n    } catch (e) {\n      console.error(\"Error playing sound:\", e);\n    }\n  }, [getAudioContext, createAudioContext]);\n\n  // Play ventilate sound\n  const playVentilateSound = useCallback(() => {\n    playSpeech(\"ventilate\");\n  }, [playSpeech]);\n\n  // Handle Metronome button click\n  const handleMetronomeClick = useCallback(() => {\n    createAudioContext();\n\n    // Start the main timer if this is the first feature activated\n    if (!clockStarted && !activeSection && !ventilationActive && !epiActive) {\n      startClock();\n      setStartTime(new Date()); // Set start time when first activated\n    }\n    if (activeSection === 'metronome' || activeSection === 'pulse+metronome') {\n      if (activeSection === 'pulse+metronome') {\n        setActiveSection('pulse');\n      } else {\n        setActiveSection(null);\n      }\n    } else {\n      if (activeSection === 'pulse') {\n        setActiveSection('pulse+metronome');\n      } else {\n        setActiveSection('metronome');\n        // Only set start time if it hasn't been set yet\n        if (!startTime) {\n          setStartTime(new Date());\n        }\n      }\n    }\n  }, [activeSection, createAudioContext, clockStarted, startClock, ventilationActive, epiActive, startTime]);\n\n  // Handle Pulse check button click\n  const handlePulseCheckClick = useCallback(() => {\n    // Start the main timer if this is the first feature activated\n    if (!clockStarted && !activeSection && !ventilationActive && !epiActive) {\n      startClock();\n      setStartTime(new Date()); // Set start time when first activated\n    }\n    if (activeSection === 'pulse' || activeSection === 'pulse+metronome') {\n      if (activeSection === 'pulse+metronome') {\n        setActiveSection('metronome');\n      } else {\n        setActiveSection(null);\n      }\n      if (pulseIntervalRef.current) {\n        clearInterval(pulseIntervalRef.current);\n        pulseIntervalRef.current = null;\n      }\n    } else {\n      if (activeSection === 'metronome') {\n        setActiveSection('pulse+metronome');\n      } else {\n        setActiveSection('pulse');\n      }\n      setPulseCheckTime(120);\n      setPauseTime(10);\n      setShowChargeMonitor(false);\n      setCountdownAnnounced({\n        5: false,\n        4: false,\n        3: false,\n        2: false,\n        1: false\n      });\n      lastSpeechRef.current = \"\"; // Reset last speech to allow new announcements\n\n      pulseIntervalRef.current = setInterval(() => {\n        setPulseCheckTime(prevTime => {\n          // Show charge monitor warning at 15 seconds\n          if (prevTime === 15) {\n            setShowChargeMonitor(true);\n            playSpeech(\"Charge monitor\");\n          }\n\n          // Countdown for last 5 seconds - with tracking to ensure each number is only announced once\n          if (prevTime <= 5 && prevTime > 0) {\n            if (!countdownAnnounced[prevTime]) {\n              playSpeech(prevTime.toString());\n              setCountdownAnnounced(prev => ({\n                ...prev,\n                [prevTime]: true\n              }));\n              if (prevTime === 1) {\n                setTimeout(() => playSpeech(\"Stop compression\"), 1000);\n              }\n            }\n          }\n\n          // Handle timeout\n          if (prevTime === 0) {\n            // Start pause countdown\n            setPauseTime(pauseTime => {\n              if (pauseTime <= 1) {\n                // Auto-restart when pause countdown finishes\n                setPulseCheckTime(120);\n                setShowChargeMonitor(false);\n                setCountdownAnnounced({\n                  5: false,\n                  4: false,\n                  3: false,\n                  2: false,\n                  1: false\n                });\n                lastSpeechRef.current = \"\"; // Reset last speech\n                return 10;\n              }\n              return pauseTime - 1;\n            });\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n    }\n  }, [activeSection, playSpeech, countdownAnnounced, clockStarted, startClock, ventilationActive, epiActive]);\n\n  // Handle Epinephrine button click\n  const handleEpinephrineClick = useCallback(() => {\n    // Start the main timer if this is the first feature activated\n    if (!clockStarted && !activeSection && !ventilationActive && !epiActive) {\n      startClock();\n      setStartTime(new Date()); // Set start time when first activated\n    }\n\n    // Toggle epinephrine state\n    setEpiActive(prev => {\n      if (prev) {\n        // If turning off, reset time and counter\n        setEpiTime(300);\n        setEpiCycles(0);\n      } else {\n        // If turning on, set initial state\n        setEpiTime(300);\n      }\n      return !prev;\n    });\n  }, [clockStarted, startClock, activeSection, ventilationActive, epiActive]);\n\n  // Update metronome state based on activeSection\n  useEffect(() => {\n    if (activeSection === 'metronome' || activeSection === 'pulse+metronome') {\n      setMetronomeRunning(true);\n    } else {\n      setMetronomeRunning(false);\n    }\n    if (!activeSection && !ventilationActive && !epiActive && clockStarted) {\n      if (clockIntervalRef.current) {\n        clearInterval(clockIntervalRef.current);\n        clockIntervalRef.current = null;\n      }\n      setSeconds(0);\n      setClockStarted(false);\n    }\n  }, [activeSection, ventilationActive, epiActive, clockStarted]);\n\n  // Metronome timer effect\n  useEffect(() => {\n    if (!metronomeRunning) return;\n    if (timerIntervalRef.current) {\n      clearInterval(timerIntervalRef.current);\n      timerIntervalRef.current = null;\n    }\n    const bpm = 110; // Fixed BPM\n    if (bpm <= 0) return;\n    const intervalTime = 60 / bpm * 1000;\n    timerIntervalRef.current = setInterval(playMetronomeClick, intervalTime);\n    playMetronomeClick();\n    return () => {\n      if (timerIntervalRef.current) {\n        clearInterval(timerIntervalRef.current);\n        timerIntervalRef.current = null;\n      }\n    };\n  }, [metronomeRunning, playMetronomeClick]);\n\n  // Ventilation timer effect\n  useEffect(() => {\n    if (!ventilationActive) return;\n    if (ventilationIntervalRef.current) {\n      clearInterval(ventilationIntervalRef.current);\n      ventilationIntervalRef.current = null;\n    }\n    if (ventilationRate <= 0) return;\n    const intervalTime = 60 / ventilationRate * 1000;\n    ventilationIntervalRef.current = setInterval(playVentilateSound, intervalTime);\n    playVentilateSound();\n    return () => {\n      if (ventilationIntervalRef.current) {\n        clearInterval(ventilationIntervalRef.current);\n        ventilationIntervalRef.current = null;\n      }\n    };\n  }, [ventilationActive, ventilationRate, playVentilateSound]);\n\n  // Epinephrine timer effect\n  useEffect(() => {\n    if (!epiActive) {\n      if (epiIntervalRef.current) {\n        clearInterval(epiIntervalRef.current);\n        epiIntervalRef.current = null;\n      }\n      return;\n    }\n    epiIntervalRef.current = setInterval(() => {\n      setEpiTime(prevTime => {\n        if (prevTime <= 0) {\n          // Increment the cycle counter when a full cycle completes\n          setEpiCycles(prev => prev + 1);\n          setEpiTime(300);\n          return 300;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n    return () => {\n      if (epiIntervalRef.current) {\n        clearInterval(epiIntervalRef.current);\n        epiIntervalRef.current = null;\n      }\n    };\n  }, [epiActive]);\n\n  // Update current time every second\n  useEffect(() => {\n    const timeUpdateInterval = setInterval(() => {\n      // Just for updating \"now\" clock display\n      if (clockStarted) {\n        setSeconds(prev => prev);\n      }\n    }, 1000);\n    return () => clearInterval(timeUpdateInterval);\n  }, [clockStarted]);\n\n  // Cleanup all intervals on unmount\n  useEffect(() => {\n    return () => {\n      if (audioContextRef.current) {\n        audioContextRef.current.close();\n      }\n      [timerIntervalRef, pulseIntervalRef, ventilationIntervalRef, epiIntervalRef, clockIntervalRef].forEach(ref => {\n        if (ref && ref.current) {\n          clearInterval(ref.current);\n          ref.current = null;\n        }\n      });\n    };\n  }, []);\n\n  // Format seconds to MM:SS\n  const formatTime = totalSeconds => {\n    const minutes = Math.floor(totalSeconds / 60);\n    const seconds = totalSeconds % 60;\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  // Format time as 24-hour clock HH:MM\n  const formatClock = date => {\n    if (!date) return \"--:--\";\n    const hours = date.getHours().toString().padStart(2, '0');\n    const minutes = date.getMinutes().toString().padStart(2, '0');\n    return `${hours}:${minutes}`;\n  };\n\n  // Render the UI\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.appContainer,\n      style: {\n        maxHeight: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        padding: '5px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          marginBottom: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/central-pierce-logo.png\",\n          alt: \"Central Pierce Fire & Rescue\",\n          style: {\n            maxWidth: '80%',\n            height: 'auto',\n            maxHeight: '120px',\n            marginBottom: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: styles.header,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: styles.title,\n          children: \"ArrestPro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.timerDisplay,\n        onClick: handleTimerClick,\n        title: \"Click to reset timer\",\n        style: {\n          padding: '5px',\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.timerText,\n          children: formatTime(seconds)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '2px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontWeight: 'bold',\n                  fontSize: '0.8rem',\n                  color: 'white'\n                },\n                children: \"Start: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontSize: '0.9rem',\n                  fontFamily: 'monospace',\n                  color: 'white'\n                },\n                children: formatClock(startTime)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontWeight: 'bold',\n                  fontSize: '0.8rem',\n                  color: 'white'\n                },\n                children: \"Now: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontSize: '0.9rem',\n                  fontFamily: 'monospace',\n                  color: 'white'\n                },\n                children: formatClock(new Date())\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }, this), confirmReset && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            backgroundColor: 'rgba(0,0,0,0.85)',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            borderRadius: '8px',\n            zIndex: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: 'white',\n              marginBottom: '15px',\n              textAlign: 'center',\n              padding: '0 10px'\n            },\n            children: \"Reset timer to 00:00?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                e.stopPropagation();\n                resetClock();\n              },\n              style: {\n                backgroundColor: '#e74c3c',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                padding: '8px 16px',\n                cursor: 'pointer'\n              },\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                e.stopPropagation();\n                cancelReset();\n              },\n              style: {\n                backgroundColor: '#7f8c8d',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                padding: '8px 16px',\n                cursor: 'pointer'\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: '1fr 1fr',\n          gridTemplateRows: 'auto auto',\n          gridTemplateAreas: `\"metronome pulse\"\n                              \"ventilation epi\"`,\n          gap: '10px',\n          marginTop: '5px',\n          marginBottom: '5px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleMetronomeClick,\n          style: {\n            gridArea: 'metronome',\n            backgroundColor: activeSection === 'metronome' || activeSection === 'pulse+metronome' ? '#e74c3c' : '#1a1a1a',\n            color: activeSection === 'metronome' || activeSection === 'pulse+metronome' ? 'white' : '#e74c3c',\n            border: activeSection === 'metronome' || activeSection === 'pulse+metronome' ? 'none' : '1px solid #e74c3c',\n            borderRadius: '8px',\n            padding: '15px',\n            cursor: 'pointer',\n            textAlign: 'left',\n            position: 'relative'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Clock, {\n              size: 24,\n              style: {\n                marginRight: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '1.1rem',\n                  fontWeight: 'bold',\n                  marginBottom: '4px'\n                },\n                children: \"Metronome\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '0.8rem',\n                  opacity: 0.8,\n                  fontWeight: 'bold'\n                },\n                children: \"110 beats/min\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleVentilation,\n          style: {\n            gridArea: 'ventilation',\n            backgroundColor: ventilationActive ? '#2ecc71' : '#1a1a1a',\n            color: ventilationActive ? 'white' : '#2ecc71',\n            border: ventilationActive ? 'none' : '1px solid #2ecc71',\n            borderRadius: '8px',\n            padding: '15px',\n            cursor: 'pointer',\n            textAlign: 'left',\n            position: 'relative'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Wind, {\n              size: 24,\n              style: {\n                marginRight: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '1.1rem',\n                  fontWeight: 'bold',\n                  marginBottom: '4px'\n                },\n                children: \"Ventilation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '0.8rem',\n                  opacity: 0.8,\n                  fontWeight: 'bold'\n                },\n                children: [ventilationRate, \" breaths/min\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePulseCheckClick,\n          style: {\n            gridArea: 'pulse',\n            backgroundColor: showChargeMonitor ? '#3498db' : activeSection === 'pulse' || activeSection === 'pulse+metronome' ? '#3498db' : '#1a1a1a',\n            color: activeSection === 'pulse' || activeSection === 'pulse+metronome' ? 'white' : '#3498db',\n            border: activeSection === 'pulse' || activeSection === 'pulse+metronome' ? 'none' : '1px solid #3498db',\n            borderRadius: '8px',\n            padding: '15px',\n            cursor: 'pointer',\n            textAlign: 'left',\n            position: 'relative',\n            animation: showChargeMonitor ? 'pulse 1s infinite' : 'none'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(HeartPulse, {\n              size: 24,\n              style: {\n                marginRight: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '1.1rem',\n                  fontWeight: 'bold',\n                  marginBottom: '4px'\n                },\n                children: \"Pulse Check\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 592,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '0.8rem',\n                  opacity: 0.8,\n                  fontWeight: 'bold'\n                },\n                children: \"2-min countdown\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 13\n          }, this), (activeSection === 'pulse' || activeSection === 'pulse+metronome') && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              right: '10px',\n              top: '50%',\n              transform: 'translateY(-50%)',\n              fontSize: '1.2rem',\n              fontWeight: 'bold'\n            },\n            children: pulseCheckTime > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: Math.floor(pulseCheckTime / 60) + \":\" + (pulseCheckTime % 60).toString().padStart(2, '0')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: Math.floor(pauseTime / 60) + \":\" + (pauseTime % 60).toString().padStart(2, '0')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEpinephrineClick,\n          style: {\n            gridArea: 'epi',\n            backgroundColor: epiActive ? '#f1c40f' : '#1a1a1a',\n            color: epiActive ? 'white' : '#f1c40f',\n            border: epiActive ? 'none' : '1px solid #f1c40f',\n            borderRadius: '8px',\n            padding: '15px',\n            cursor: 'pointer',\n            textAlign: 'left',\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Syringe, {\n              size: 24,\n              style: {\n                marginRight: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '1.1rem',\n                  fontWeight: 'bold',\n                  marginBottom: '4px'\n                },\n                children: \"Epinephrine\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 632,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '0.8rem',\n                  opacity: 0.8,\n                  fontWeight: 'bold'\n                },\n                children: \"5-min countdown\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 633,\n                columnNumber: 17\n              }, this), epiActive && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '0.8rem',\n                  opacity: 0.8,\n                  fontWeight: 'bold'\n                },\n                children: [\"Cycles: \", epiCycles]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 634,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 629,\n            columnNumber: 13\n          }, this), epiActive && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              right: '10px',\n              top: '50%',\n              transform: 'translateY(-50%)',\n              fontSize: '1.2rem',\n              fontWeight: 'bold'\n            },\n            children: [Math.floor(epiTime / 60), \":\", (epiTime % 60).toString().padStart(2, '0')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this), ventilationActive && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#ecf0f1',\n          padding: '5px',\n          borderRadius: '8px',\n          marginBottom: '5px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '2px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontWeight: 'bold'\n            },\n            children: [\"Ventilation: \", ventilationRate, \" breaths/min\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"5\",\n          max: \"20\",\n          value: ventilationRate,\n          onChange: e => setVentilationRate(parseInt(e.target.value)),\n          style: {\n            width: '100%',\n            height: '20px',\n            accentColor: '#2ecc71'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            fontSize: '0.8rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"15\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"20\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      dangerouslySetInnerHTML: {\n        __html: `\n          @keyframes pulse {\n            0% { background-color: #3498db; }\n            50% { background-color: #2980b9; }\n            100% { background-color: #3498db; }\n          }\n        `\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 416,\n    columnNumber: 5\n  }, this);\n};\n_s(CPRTempoApp, \"QJvJX1u+8+xb23ble5gVHRgtcSA=\");\n_c = CPRTempoApp;\nexport default CPRTempoApp;\nvar _c;\n$RefreshReg$(_c, \"CPRTempoApp\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","HeartPulse","Clock","Syringe","Wind","styles","jsxDEV","_jsxDEV","CPRTempoApp","_s","activeSection","setActiveSection","seconds","setSeconds","pulseCheckTime","setPulseCheckTime","pauseTime","setPauseTime","metronomeRunning","setMetronomeRunning","ventilationActive","setVentilationActive","ventilationRate","setVentilationRate","showChargeMonitor","setShowChargeMonitor","epiActive","setEpiActive","epiTime","setEpiTime","epiCycles","setEpiCycles","clockStarted","setClockStarted","startTime","setStartTime","countdownAnnounced","setCountdownAnnounced","confirmReset","setConfirmReset","audioContextRef","timerIntervalRef","pulseIntervalRef","ventilationIntervalRef","epiIntervalRef","clockIntervalRef","lastSpeechRef","playSpeech","text","current","window","utterance","SpeechSynthesisUtterance","rate","volume","speechSynthesis","speak","createAudioContext","AudioContext","webkitAudioContext","e","console","error","getAudioContext","startClock","clearInterval","interval","setInterval","prev","resetClock","handleTimerClick","cancelReset","toggleVentilation","playMetronomeClick","ctx","state","resume","oscillator","createOscillator","type","frequency","value","connect","destination","start","stop","currentTime","playVentilateSound","handleMetronomeClick","Date","handlePulseCheckClick","prevTime","toString","setTimeout","handleEpinephrineClick","bpm","intervalTime","timeUpdateInterval","close","forEach","ref","formatTime","totalSeconds","minutes","Math","floor","padStart","formatClock","date","hours","getHours","getMinutes","className","container","children","appContainer","style","maxHeight","display","flexDirection","padding","textAlign","marginBottom","src","alt","maxWidth","height","fileName","_jsxFileName","lineNumber","columnNumber","header","title","timerDisplay","onClick","position","timerText","marginTop","justifyContent","width","fontWeight","fontSize","color","fontFamily","top","left","right","bottom","backgroundColor","alignItems","borderRadius","zIndex","gap","stopPropagation","border","cursor","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","gridArea","size","marginRight","opacity","animation","transform","min","max","onChange","parseInt","target","accentColor","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["/Users/davidhelmers/arrestpro/src/CPRTempoApp.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { HeartPulse, Clock, Syringe, Wind } from 'lucide-react';\nimport styles from './CPRTempoApp.module.css';\n\n// Create a simplified version that will definitely compile\nconst CPRTempoApp = () => {\n  // State variables\n  const [activeSection, setActiveSection] = useState(null);\n  const [seconds, setSeconds] = useState(0);\n  const [pulseCheckTime, setPulseCheckTime] = useState(120); // 2 minutes countdown\n  const [pauseTime, setPauseTime] = useState(10); // 10 second pause countdown\n  const [metronomeRunning, setMetronomeRunning] = useState(false);\n  const [ventilationActive, setVentilationActive] = useState(false);\n  const [ventilationRate, setVentilationRate] = useState(11); // Default ventilation rate\n  const [showChargeMonitor, setShowChargeMonitor] = useState(false);\n  const [epiActive, setEpiActive] = useState(false);\n  const [epiTime, setEpiTime] = useState(300); // 5 minutes countdown\n  const [epiCycles, setEpiCycles] = useState(0); // Counter for epinephrine cycles\n  const [clockStarted, setClockStarted] = useState(false);\n  const [startTime, setStartTime] = useState(null); // Track when the metronome was started\n  const [countdownAnnounced, setCountdownAnnounced] = useState({5: false, 4: false, 3: false, 2: false, 1: false}); // Track announced numbers\n  const [confirmReset, setConfirmReset] = useState(false); // State for reset confirmation\n\n  // Refs for safer interval handling\n  const audioContextRef = useRef(null);\n  const timerIntervalRef = useRef(null);\n  const pulseIntervalRef = useRef(null);\n  const ventilationIntervalRef = useRef(null);\n  const epiIntervalRef = useRef(null);\n  const clockIntervalRef = useRef(null);\n  const lastSpeechRef = useRef(\"\");\n\n  // Play speech synthesis - prevent duplicates by tracking last phrase\n  const playSpeech = useCallback((text) => {\n    // Don't repeat the same text twice in a row\n    if (lastSpeechRef.current === text) {\n      return;\n    }\n    \n    if ('speechSynthesis' in window) {\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.rate = 1.0;\n      utterance.volume = 1.0;\n      window.speechSynthesis.speak(utterance);\n      lastSpeechRef.current = text;\n    }\n  }, []);\n\n  // Create audio context\n  const createAudioContext = useCallback(() => {\n    if (!audioContextRef.current) {\n      try {\n        audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      } catch (e) {\n        console.error(\"Failed to create audio context:\", e);\n      }\n    }\n    return audioContextRef.current;\n  }, []);\n\n  // Get audio context\n  const getAudioContext = useCallback(() => {\n    return audioContextRef.current;\n  }, []);\n\n  // Start the main clock\n  const startClock = useCallback(() => {\n    if (clockIntervalRef.current) {\n      clearInterval(clockIntervalRef.current);\n    }\n    \n    const interval = setInterval(() => {\n      setSeconds(prev => prev + 1);\n    }, 1000);\n    \n    clockIntervalRef.current = interval;\n    setClockStarted(true);\n  }, []);\n  \n  // Reset the main clock - with confirmation\n  const resetClock = useCallback(() => {\n    setSeconds(0);\n    setConfirmReset(false);\n    \n    // Only start the clock if there's an active feature\n    if (!clockStarted && (activeSection || ventilationActive || epiActive)) {\n      startClock();\n    } else if (!activeSection && !ventilationActive && !epiActive) {\n      // If everything is inactive, just reset without starting\n      if (clockIntervalRef.current) {\n        clearInterval(clockIntervalRef.current);\n        clockIntervalRef.current = null;\n      }\n      setClockStarted(false);\n    }\n  }, [clockStarted, startClock, activeSection, ventilationActive, epiActive]);\n  \n  // Handle timer click to show confirmation\n  const handleTimerClick = useCallback(() => {\n    // If timer is already at 0, no need for confirmation\n    if (seconds === 0) return;\n    \n    // Show confirmation dialog\n    setConfirmReset(true);\n  }, [seconds]);\n  \n  // Cancel reset\n  const cancelReset = useCallback(() => {\n    setConfirmReset(false);\n  }, []);\n\n  // Toggle ventilation\n  const toggleVentilation = useCallback(() => {\n    // Start the main timer if this is the first feature activated\n    if (!clockStarted && !activeSection && !ventilationActive && !epiActive) {\n      startClock();\n    }\n    \n    setVentilationActive(prev => !prev);\n  }, [clockStarted, startClock, activeSection, ventilationActive, epiActive]);\n\n  // Play metronome click\n  const playMetronomeClick = useCallback(() => {\n    try {\n      const ctx = getAudioContext() || createAudioContext();\n      if (!ctx) return;\n      \n      if (ctx.state === 'suspended') {\n        ctx.resume();\n      }\n      \n      const oscillator = ctx.createOscillator();\n      oscillator.type = 'sine';\n      oscillator.frequency.value = 800;\n      oscillator.connect(ctx.destination);\n      oscillator.start();\n      oscillator.stop(ctx.currentTime + 0.05);\n    } catch (e) {\n      console.error(\"Error playing sound:\", e);\n    }\n  }, [getAudioContext, createAudioContext]);\n\n  // Play ventilate sound\n  const playVentilateSound = useCallback(() => {\n    playSpeech(\"ventilate\");\n  }, [playSpeech]);\n\n  // Handle Metronome button click\n  const handleMetronomeClick = useCallback(() => {\n    createAudioContext();\n    \n    // Start the main timer if this is the first feature activated\n    if (!clockStarted && !activeSection && !ventilationActive && !epiActive) {\n      startClock();\n      setStartTime(new Date()); // Set start time when first activated\n    }\n    \n    if (activeSection === 'metronome' || activeSection === 'pulse+metronome') {\n      if (activeSection === 'pulse+metronome') {\n        setActiveSection('pulse');\n      } else {\n        setActiveSection(null);\n      }\n    } else {\n      if (activeSection === 'pulse') {\n        setActiveSection('pulse+metronome');\n      } else {\n        setActiveSection('metronome');\n        // Only set start time if it hasn't been set yet\n        if (!startTime) {\n          setStartTime(new Date());\n        }\n      }\n    }\n  }, [activeSection, createAudioContext, clockStarted, startClock, ventilationActive, epiActive, startTime]);\n\n  // Handle Pulse check button click\n  const handlePulseCheckClick = useCallback(() => {\n    // Start the main timer if this is the first feature activated\n    if (!clockStarted && !activeSection && !ventilationActive && !epiActive) {\n      startClock();\n      setStartTime(new Date()); // Set start time when first activated\n    }\n    \n    if (activeSection === 'pulse' || activeSection === 'pulse+metronome') {\n      if (activeSection === 'pulse+metronome') {\n        setActiveSection('metronome');\n      } else {\n        setActiveSection(null);\n      }\n      \n      if (pulseIntervalRef.current) {\n        clearInterval(pulseIntervalRef.current);\n        pulseIntervalRef.current = null;\n      }\n    } else {\n      if (activeSection === 'metronome') {\n        setActiveSection('pulse+metronome');\n      } else {\n        setActiveSection('pulse');\n      }\n      \n      setPulseCheckTime(120);\n      setPauseTime(10);\n      setShowChargeMonitor(false);\n      setCountdownAnnounced({5: false, 4: false, 3: false, 2: false, 1: false});\n      lastSpeechRef.current = \"\"; // Reset last speech to allow new announcements\n      \n      pulseIntervalRef.current = setInterval(() => {\n        setPulseCheckTime(prevTime => {\n          // Show charge monitor warning at 15 seconds\n          if (prevTime === 15) {\n            setShowChargeMonitor(true);\n            playSpeech(\"Charge monitor\");\n          }\n          \n          // Countdown for last 5 seconds - with tracking to ensure each number is only announced once\n          if (prevTime <= 5 && prevTime > 0) {\n            if (!countdownAnnounced[prevTime]) {\n              playSpeech(prevTime.toString());\n              setCountdownAnnounced(prev => ({...prev, [prevTime]: true}));\n              \n              if (prevTime === 1) {\n                setTimeout(() => playSpeech(\"Stop compression\"), 1000);\n              }\n            }\n          }\n          \n          // Handle timeout\n          if (prevTime === 0) {\n            // Start pause countdown\n            setPauseTime(pauseTime => {\n              if (pauseTime <= 1) {\n                // Auto-restart when pause countdown finishes\n                setPulseCheckTime(120);\n                setShowChargeMonitor(false);\n                setCountdownAnnounced({5: false, 4: false, 3: false, 2: false, 1: false});\n                lastSpeechRef.current = \"\"; // Reset last speech\n                return 10;\n              }\n              return pauseTime - 1;\n            });\n            return 0;\n          }\n          \n          return prevTime - 1;\n        });\n      }, 1000);\n    }\n  }, [activeSection, playSpeech, countdownAnnounced, clockStarted, startClock, ventilationActive, epiActive]);\n\n  // Handle Epinephrine button click\n  const handleEpinephrineClick = useCallback(() => {\n    // Start the main timer if this is the first feature activated\n    if (!clockStarted && !activeSection && !ventilationActive && !epiActive) {\n      startClock();\n      setStartTime(new Date()); // Set start time when first activated\n    }\n    \n    // Toggle epinephrine state\n    setEpiActive(prev => {\n      if (prev) {\n        // If turning off, reset time and counter\n        setEpiTime(300);\n        setEpiCycles(0);\n      } else {\n        // If turning on, set initial state\n        setEpiTime(300);\n      }\n      return !prev;\n    });\n  }, [clockStarted, startClock, activeSection, ventilationActive, epiActive]);\n\n  // Update metronome state based on activeSection\n  useEffect(() => {\n    if (activeSection === 'metronome' || activeSection === 'pulse+metronome') {\n      setMetronomeRunning(true);\n    } else {\n      setMetronomeRunning(false);\n    }\n    \n    if (!activeSection && !ventilationActive && !epiActive && clockStarted) {\n      if (clockIntervalRef.current) {\n        clearInterval(clockIntervalRef.current);\n        clockIntervalRef.current = null;\n      }\n      setSeconds(0);\n      setClockStarted(false);\n    }\n  }, [activeSection, ventilationActive, epiActive, clockStarted]);\n\n  // Metronome timer effect\n  useEffect(() => {\n    if (!metronomeRunning) return;\n    \n    if (timerIntervalRef.current) {\n      clearInterval(timerIntervalRef.current);\n      timerIntervalRef.current = null;\n    }\n    \n    const bpm = 110; // Fixed BPM\n    if (bpm <= 0) return;\n    \n    const intervalTime = (60 / bpm) * 1000;\n    timerIntervalRef.current = setInterval(playMetronomeClick, intervalTime);\n    \n    playMetronomeClick();\n    \n    return () => {\n      if (timerIntervalRef.current) {\n        clearInterval(timerIntervalRef.current);\n        timerIntervalRef.current = null;\n      }\n    };\n  }, [metronomeRunning, playMetronomeClick]);\n\n  // Ventilation timer effect\n  useEffect(() => {\n    if (!ventilationActive) return;\n    \n    if (ventilationIntervalRef.current) {\n      clearInterval(ventilationIntervalRef.current);\n      ventilationIntervalRef.current = null;\n    }\n    \n    if (ventilationRate <= 0) return;\n    \n    const intervalTime = (60 / ventilationRate) * 1000;\n    ventilationIntervalRef.current = setInterval(playVentilateSound, intervalTime);\n    \n    playVentilateSound();\n    \n    return () => {\n      if (ventilationIntervalRef.current) {\n        clearInterval(ventilationIntervalRef.current);\n        ventilationIntervalRef.current = null;\n      }\n    };\n  }, [ventilationActive, ventilationRate, playVentilateSound]);\n\n  // Epinephrine timer effect\n  useEffect(() => {\n    if (!epiActive) {\n      if (epiIntervalRef.current) {\n        clearInterval(epiIntervalRef.current);\n        epiIntervalRef.current = null;\n      }\n      return;\n    }\n    \n    epiIntervalRef.current = setInterval(() => {\n      setEpiTime(prevTime => {\n        if (prevTime <= 0) {\n          // Increment the cycle counter when a full cycle completes\n          setEpiCycles(prev => prev + 1);\n          setEpiTime(300);\n          return 300;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n    \n    return () => {\n      if (epiIntervalRef.current) {\n        clearInterval(epiIntervalRef.current);\n        epiIntervalRef.current = null;\n      }\n    };\n  }, [epiActive]);\n\n  // Update current time every second\n  useEffect(() => {\n    const timeUpdateInterval = setInterval(() => {\n      // Just for updating \"now\" clock display\n      if (clockStarted) {\n        setSeconds(prev => prev);\n      }\n    }, 1000);\n    \n    return () => clearInterval(timeUpdateInterval);\n  }, [clockStarted]);\n\n  // Cleanup all intervals on unmount\n  useEffect(() => {\n    return () => {\n      if (audioContextRef.current) {\n        audioContextRef.current.close();\n      }\n      \n      [timerIntervalRef, pulseIntervalRef, ventilationIntervalRef, epiIntervalRef, clockIntervalRef].forEach(ref => {\n        if (ref && ref.current) {\n          clearInterval(ref.current);\n          ref.current = null;\n        }\n      });\n    };\n  }, []);\n\n  // Format seconds to MM:SS\n  const formatTime = (totalSeconds) => {\n    const minutes = Math.floor(totalSeconds / 60);\n    const seconds = totalSeconds % 60;\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n  \n  // Format time as 24-hour clock HH:MM\n  const formatClock = (date) => {\n    if (!date) return \"--:--\";\n    const hours = date.getHours().toString().padStart(2, '0');\n    const minutes = date.getMinutes().toString().padStart(2, '0');\n    return `${hours}:${minutes}`;\n  };\n\n  // Render the UI\n  return (\n    <div className={styles.container}>\n\n\n      <div className={styles.appContainer} style={{ maxHeight: '100vh', display: 'flex', flexDirection: 'column', padding: '5px' }}>\n        {/* Logo Image */}\n{/* Logo Image Embedded */}\n        <div style={{ textAlign: 'center', marginBottom: '10px' }}>\n          <img \n            src=\"/central-pierce-logo.png\" \n            alt=\"Central Pierce Fire & Rescue\" \n            style={{ \n              maxWidth: '80%', \n              height: 'auto',\n              maxHeight: '120px',\n              marginBottom: '5px'\n            }} \n          />\n        </div>\n\n        <header className={styles.header}>\n        <h1 className={styles.title}>ArrestPro</h1>\n      </header>\n\n        {/* Timer Display with click to reset - with confirmation */}\n        <div\n          className={styles.timerDisplay}\n          onClick={handleTimerClick}\n          title=\"Click to reset timer\"\n          style={{ padding: '5px', position: 'relative' }}\n        >\n          <div className={styles.timerText}>\n            {formatTime(seconds)}\n          </div>\n          <div style={{ marginTop: '2px' }}>\n            <div style={{ display: 'flex', justifyContent: 'space-between', width: '100%' }}>\n              <div>\n                <span style={{ fontWeight: 'bold', fontSize: '0.8rem', color: 'white' }}>Start: </span>\n                <span style={{ fontSize: '0.9rem', fontFamily: 'monospace', color: 'white' }}>{formatClock(startTime)}</span>\n              </div>\n              <div>\n                <span style={{ fontWeight: 'bold', fontSize: '0.8rem', color: 'white' }}>Now: </span>\n                <span style={{ fontSize: '0.9rem', fontFamily: 'monospace', color: 'white' }}>{formatClock(new Date())}</span>\n              </div>\n            </div>\n          </div>\n          \n          {/* Reset Confirmation Dialog */}\n          {confirmReset && (\n            <div style={{\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              right: 0,\n              bottom: 0,\n              backgroundColor: 'rgba(0,0,0,0.85)',\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n              alignItems: 'center',\n              borderRadius: '8px',\n              zIndex: 10\n            }}>\n              <div style={{ color: 'white', marginBottom: '15px', textAlign: 'center', padding: '0 10px' }}>\n                Reset timer to 00:00?\n              </div>\n              <div style={{ display: 'flex', gap: '10px' }}>\n                <button \n                  onClick={(e) => { e.stopPropagation(); resetClock(); }}\n                  style={{\n                    backgroundColor: '#e74c3c',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '4px',\n                    padding: '8px 16px',\n                    cursor: 'pointer'\n                  }}\n                >\n                  Reset\n                </button>\n                <button \n                  onClick={(e) => { e.stopPropagation(); cancelReset(); }}\n                  style={{\n                    backgroundColor: '#7f8c8d',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '4px',\n                    padding: '8px 16px',\n                    cursor: 'pointer'\n                  }}\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Main Buttons */}\n        <div style={{ \n          display: 'grid', \n          gridTemplateColumns: '1fr 1fr', \n          gridTemplateRows: 'auto auto',\n          gridTemplateAreas: `\"metronome pulse\"\n                              \"ventilation epi\"`,\n          gap: '10px', \n          marginTop: '5px', \n          marginBottom: '5px' \n        }}>\n          {/* Metronome Button - Inverted colors */}\n          <button\n            onClick={handleMetronomeClick}\n            style={{\n              gridArea: 'metronome',\n              backgroundColor: (activeSection === 'metronome' || activeSection === 'pulse+metronome') ? '#e74c3c' : '#1a1a1a',\n              color: (activeSection === 'metronome' || activeSection === 'pulse+metronome') ? 'white' : '#e74c3c',\n              border: (activeSection === 'metronome' || activeSection === 'pulse+metronome') ? 'none' : '1px solid #e74c3c',\n              borderRadius: '8px',\n              padding: '15px',\n              cursor: 'pointer',\n              textAlign: 'left',\n              position: 'relative'\n            }}\n          >\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n              <Clock size={24} style={{ marginRight: '10px' }} />\n              <div>\n                <div style={{ fontSize: '1.1rem', fontWeight: 'bold', marginBottom: '4px' }}>Metronome</div>\n                <div style={{ fontSize: '0.8rem', opacity: 0.8, fontWeight: 'bold' }}>110 beats/min</div>\n              </div>\n            </div>\n          </button>\n         \n          {/* Ventilation Button - Inverted colors */}\n          <button\n            onClick={toggleVentilation}\n            style={{\n              gridArea: 'ventilation',\n              backgroundColor: ventilationActive ? '#2ecc71' : '#1a1a1a',\n              color: ventilationActive ? 'white' : '#2ecc71',\n              border: ventilationActive ? 'none' : '1px solid #2ecc71',\n              borderRadius: '8px',\n              padding: '15px',\n              cursor: 'pointer',\n              textAlign: 'left',\n              position: 'relative'\n            }}\n          >\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n              <Wind size={24} style={{ marginRight: '10px' }} />\n              <div>\n                <div style={{ fontSize: '1.1rem', fontWeight: 'bold', marginBottom: '4px' }}>Ventilation</div>\n                <div style={{ fontSize: '0.8rem', opacity: 0.8, fontWeight: 'bold' }}>{ventilationRate} breaths/min</div>\n              </div>\n            </div>\n          </button>\n         \n          {/* Pulse Check Button - Inverted colors */}\n          <button\n            onClick={handlePulseCheckClick}\n            style={{\n              gridArea: 'pulse',\n              backgroundColor: showChargeMonitor ? '#3498db' : \n                (activeSection === 'pulse' || activeSection === 'pulse+metronome') ? '#3498db' : '#1a1a1a',\n              color: (activeSection === 'pulse' || activeSection === 'pulse+metronome') ? 'white' : '#3498db',\n              border: (activeSection === 'pulse' || activeSection === 'pulse+metronome') ? 'none' : '1px solid #3498db',\n              borderRadius: '8px',\n              padding: '15px',\n              cursor: 'pointer',\n              textAlign: 'left',\n              position: 'relative',\n              animation: showChargeMonitor ? 'pulse 1s infinite' : 'none'\n            }}\n          >\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n              <HeartPulse size={24} style={{ marginRight: '10px' }} />\n              <div>\n                <div style={{ fontSize: '1.1rem', fontWeight: 'bold', marginBottom: '4px' }}>Pulse Check</div>\n                <div style={{ fontSize: '0.8rem', opacity: 0.8, fontWeight: 'bold' }}>2-min countdown</div>\n              </div>\n            </div>\n            {(activeSection === 'pulse' || activeSection === 'pulse+metronome') && (\n              <div style={{ \n                position: 'absolute',\n                right: '10px',\n                top: '50%',\n                transform: 'translateY(-50%)',\n                fontSize: '1.2rem',\n                fontWeight: 'bold'\n              }}>\n                {pulseCheckTime > 0 ? (\n                  <div>{Math.floor(pulseCheckTime / 60) + \":\" + (pulseCheckTime % 60).toString().padStart(2, '0')}</div>\n                ) : (\n                  <div>{Math.floor(pauseTime / 60) + \":\" + (pauseTime % 60).toString().padStart(2, '0')}</div>\n                )}\n              </div>\n            )}\n          </button>\n         \n          {/* Epinephrine Button - Inverted colors */}\n          <button\n            onClick={handleEpinephrineClick}\n            style={{\n              gridArea: 'epi',\n              backgroundColor: epiActive ? '#f1c40f' : '#1a1a1a',\n              color: epiActive ? 'white' : '#f1c40f',\n              border: epiActive ? 'none' : '1px solid #f1c40f',\n              borderRadius: '8px',\n              padding: '15px',\n              cursor: 'pointer',\n              textAlign: 'left',\n              position: 'relative'\n            }}\n          >\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n              <Syringe size={24} style={{ marginRight: '10px' }} />\n              <div>\n                <div style={{ fontSize: '1.1rem', fontWeight: 'bold', marginBottom: '4px' }}>Epinephrine</div>\n                <div style={{ fontSize: '0.8rem', opacity: 0.8, fontWeight: 'bold' }}>5-min countdown</div>\n                {epiActive && <div style={{ fontSize: '0.8rem', opacity: 0.8, fontWeight: 'bold' }}>Cycles: {epiCycles}</div>}\n              </div>\n            </div>\n            {epiActive && (\n              <div style={{ \n                position: 'absolute',\n                right: '10px',\n                top: '50%',\n                transform: 'translateY(-50%)',\n                fontSize: '1.2rem',\n                fontWeight: 'bold'\n              }}>\n                {Math.floor(epiTime / 60)}:{(epiTime % 60).toString().padStart(2, '0')}\n              </div>\n            )}\n          </button>\n        </div>\n\n        {/* Ventilation Rate Control - compact slider */}\n        {ventilationActive && (\n          <div style={{ \n            backgroundColor: '#ecf0f1',\n            padding: '5px',\n            borderRadius: '8px',\n            marginBottom: '5px' \n          }}>\n            <div style={{ marginBottom: '2px' }}>\n              <span style={{ fontWeight: 'bold' }}>Ventilation: {ventilationRate} breaths/min</span>\n            </div>\n            <input\n              type=\"range\"\n              min=\"5\"\n              max=\"20\"\n              value={ventilationRate}\n              onChange={(e) => setVentilationRate(parseInt(e.target.value))}\n              style={{ \n                width: '100%',\n                height: '20px',\n                accentColor: '#2ecc71'\n              }}\n            />\n            <div style={{ display: 'flex', justifyContent: 'space-between', fontSize: '0.8rem' }}>\n              <span>5</span>\n              <span>10</span>\n              <span>15</span>\n              <span>20</span>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Animation style for the pulse flash */}\n      <style dangerouslySetInnerHTML={{\n        __html: `\n          @keyframes pulse {\n            0% { background-color: #3498db; }\n            50% { background-color: #2980b9; }\n            100% { background-color: #3498db; }\n          }\n        `\n      }} />\n    </div>\n  );\n};\n\nexport default CPRTempoApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}