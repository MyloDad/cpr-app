{"ast":null,"code":"var _jsxFileName = \"/Users/davidhelmers/arrestpro/src/CPRTempoApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { HeartPulse, Clock, Syringe, Wind } from 'lucide-react';\nimport styles from './CPRTempoApp.module.css';\n\n// Create a simplified version that will definitely compile\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CPRTempoApp = () => {\n  _s();\n  // State variables\n  const [activeSection, setActiveSection] = useState(null);\n  const [seconds, setSeconds] = useState(0);\n  const [pulseCheckTime, setPulseCheckTime] = useState(120); // 2 minutes countdown\n  const [pauseTime, setPauseTime] = useState(10); // 10 second pause countdown\n  const [metronomeRunning, setMetronomeRunning] = useState(false);\n  const [ventilationActive, setVentilationActive] = useState(false);\n  const [ventilationRate, setVentilationRate] = useState(11); // Default ventilation rate\n  const [showChargeMonitor, setShowChargeMonitor] = useState(false);\n  const [epiActive, setEpiActive] = useState(false);\n  const [epiTime, setEpiTime] = useState(300); // 5 minutes countdown\n  const [epiCycles, setEpiCycles] = useState(0); // Counter for epinephrine cycles\n  const [clockStarted, setClockStarted] = useState(false);\n  const [startTime, setStartTime] = useState(null); // Track when the metronome was started\n  const [countdownAnnounced, setCountdownAnnounced] = useState({\n    5: false,\n    4: false,\n    3: false,\n    2: false,\n    1: false\n  }); // Track announced numbers\n  const [confirmReset, setConfirmReset] = useState(false); // State for reset confirmation\n\n  const [pulseFlashing, setPulseFlashing] = useState(false); // For pulse button flashing in last 5 seconds\n  const [epiFlashing, setEpiFlashing] = useState(false); // For epinephrine button flashing in last 5 seconds\n\n  // Refs for safer interval handling\n  const audioContextRef = useRef(null);\n  const timerIntervalRef = useRef(null);\n  const pulseIntervalRef = useRef(null);\n  const ventilationIntervalRef = useRef(null);\n  const epiIntervalRef = useRef(null);\n  const clockIntervalRef = useRef(null);\n  const lastSpeechRef = useRef(\"\");\n\n  // Brand colors from logo\n  const COLORS = {\n    background: '#1e2126',\n    // Dark background\n    logoRed: '#ff4136',\n    // Red from logo\n    logoYellow: '#f4eb00ff',\n    // Yellow from logo\n    pulseBlue: '#3498db',\n    // Blue for pulse check\n    ventGreen: '#2ecc40',\n    // Green for ventilation\n    white: '#ffffff',\n    // White text\n    darkText: '#1a1a1a',\n    // Dark text for yellow buttons\n    timerBg: '#2c3e50',\n    // Timer background\n    sliderBg: '#ecf0f1' // Slider background\n  };\n\n  // Play speech synthesis - prevent duplicates by tracking last phrase\n  const playSpeech = useCallback(text => {\n    // Don't repeat the same text twice in a row\n    if (lastSpeechRef.current === text) {\n      return;\n    }\n    if ('speechSynthesis' in window) {\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.rate = 1.0;\n      utterance.volume = 1.0;\n      window.speechSynthesis.speak(utterance);\n      lastSpeechRef.current = text;\n    }\n  }, []);\n\n  // Create audio context\n  const createAudioContext = useCallback(() => {\n    if (!audioContextRef.current) {\n      try {\n        audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      } catch (e) {\n        console.error(\"Failed to create audio context:\", e);\n      }\n    }\n    return audioContextRef.current;\n  }, []);\n\n  // Get audio context\n  const getAudioContext = useCallback(() => {\n    return audioContextRef.current;\n  }, []);\n\n  // Start the main clock\n  const startClock = useCallback(() => {\n    if (clockIntervalRef.current) {\n      clearInterval(clockIntervalRef.current);\n    }\n    const interval = setInterval(() => {\n      setSeconds(prev => prev + 1);\n    }, 1000);\n    clockIntervalRef.current = interval;\n    setClockStarted(true);\n  }, []);\n\n  // Reset the main clock - with confirmation\n  const resetClock = useCallback(() => {\n    setSeconds(0);\n    setConfirmReset(false);\n\n    // Only start the clock if there's an active feature\n    if (!clockStarted && (activeSection || ventilationActive || epiActive)) {\n      startClock();\n    } else if (!activeSection && !ventilationActive && !epiActive) {\n      // If everything is inactive, just reset without starting\n      if (clockIntervalRef.current) {\n        clearInterval(clockIntervalRef.current);\n        clockIntervalRef.current = null;\n      }\n      setClockStarted(false);\n    }\n  }, [clockStarted, startClock, activeSection, ventilationActive, epiActive]);\n\n  // Handle timer click to show confirmation\n  const handleTimerClick = useCallback(() => {\n    // If timer is already at 0, no need for confirmation\n    if (seconds === 0) return;\n\n    // Show confirmation dialog\n    setConfirmReset(true);\n  }, [seconds]);\n\n  // Cancel reset\n  const cancelReset = useCallback(() => {\n    setConfirmReset(false);\n  }, []);\n\n  // Toggle ventilation\n  const toggleVentilation = useCallback(() => {\n    // Start the main timer if this is the first feature activated\n    if (!clockStarted && !activeSection && !ventilationActive && !epiActive) {\n      startClock();\n      setStartTime(new Date()); // Set start time when first activated\n    }\n    setVentilationActive(prev => !prev);\n  }, [clockStarted, startClock, activeSection, ventilationActive, epiActive]);\n\n  // Play metronome click\n  const playMetronomeClick = useCallback(() => {\n    try {\n      const ctx = getAudioContext() || createAudioContext();\n      if (!ctx) return;\n      if (ctx.state === 'suspended') {\n        ctx.resume();\n      }\n      const oscillator = ctx.createOscillator();\n      oscillator.type = 'sine';\n      oscillator.frequency.value = 800;\n      oscillator.connect(ctx.destination);\n      oscillator.start();\n      oscillator.stop(ctx.currentTime + 0.05);\n    } catch (e) {\n      console.error(\"Error playing sound:\", e);\n    }\n  }, [getAudioContext, createAudioContext]);\n\n  // Play ventilate sound\n  const playVentilateSound = useCallback(() => {\n    playSpeech(\"ventilate\");\n  }, [playSpeech]);\n\n  // Handle Metronome button click\n  const handleMetronomeClick = useCallback(() => {\n    createAudioContext();\n\n    // Start the main timer if this is the first feature activated\n    if (!clockStarted && !activeSection && !ventilationActive && !epiActive) {\n      startClock();\n      setStartTime(new Date()); // Set start time when first activated\n    }\n    if (activeSection === 'metronome' || activeSection === 'pulse+metronome') {\n      if (activeSection === 'pulse+metronome') {\n        setActiveSection('pulse');\n      } else {\n        setActiveSection(null);\n      }\n    } else {\n      if (activeSection === 'pulse') {\n        setActiveSection('pulse+metronome');\n      } else {\n        setActiveSection('metronome');\n        // Only set start time if it hasn't been set yet\n        if (!startTime) {\n          setStartTime(new Date());\n        }\n      }\n    }\n  }, [activeSection, createAudioContext, clockStarted, startClock, ventilationActive, epiActive, startTime]);\n\n  // Handle Pulse check button click\n  const handlePulseCheckClick = useCallback(() => {\n    // Start the main timer if this is the first feature activated\n    if (!clockStarted && !activeSection && !ventilationActive && !epiActive) {\n      startClock();\n      setStartTime(new Date()); // Set start time when first activated\n    }\n    if (activeSection === 'pulse' || activeSection === 'pulse+metronome') {\n      if (activeSection === 'pulse+metronome') {\n        setActiveSection('metronome');\n      } else {\n        setActiveSection(null);\n      }\n\n      // Clear both intervals to be safe\n      if (pulseIntervalRef.current) {\n        clearInterval(pulseIntervalRef.current);\n        pulseIntervalRef.current = null;\n      }\n      setPulseFlashing(false); // Stop flashing\n    } else {\n      if (activeSection === 'metronome') {\n        setActiveSection('pulse+metronome');\n      } else {\n        setActiveSection('pulse');\n      }\n\n      // Reset all values\n      setPulseCheckTime(120);\n      setPauseTime(10);\n      setShowChargeMonitor(false);\n      setCountdownAnnounced({\n        5: false,\n        4: false,\n        3: false,\n        2: false,\n        1: false\n      });\n      lastSpeechRef.current = \"\"; // Reset last speech to allow new announcements\n\n      // Start the main pulse check countdown\n      startPulseCountdown();\n    }\n  }, [activeSection, playSpeech, countdownAnnounced, clockStarted, startClock, ventilationActive, epiActive]);\n\n  // Separate function to start pulse countdown\n  const startPulseCountdown = useCallback(() => {\n    // Clear any existing interval first\n    if (pulseIntervalRef.current) {\n      clearInterval(pulseIntervalRef.current);\n    }\n    pulseIntervalRef.current = setInterval(() => {\n      setPulseCheckTime(prevTime => {\n        // Show charge monitor warning at 15 seconds\n        if (prevTime === 15) {\n          setShowChargeMonitor(true);\n          playSpeech(\"Charge monitor\");\n        }\n        if (prevTime === 15) {\n          setPulseFlashing(true);\n        }\n\n        // Countdown for last 5 seconds\n        if (prevTime <= 5 && prevTime > 0) {\n          if (!countdownAnnounced[prevTime]) {\n            playSpeech(prevTime.toString());\n            setCountdownAnnounced(prev => ({\n              ...prev,\n              [prevTime]: true\n            }));\n            if (prevTime === 1) {\n              setTimeout(() => {\n                playSpeech(\"Stop compression\");\n              }, 1000);\n            }\n          }\n        }\n\n        // When pulse check countdown reaches zero\n        if (prevTime === 0) {\n          setPulseFlashing(false);\n\n          // Clear this interval and start the pause countdown\n          clearInterval(pulseIntervalRef.current);\n          startPauseCountdown();\n          return 0; // Keep it at zero\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n  }, [playSpeech, countdownAnnounced]);\n\n  // Separate function to start pause countdown\n  const startPauseCountdown = useCallback(() => {\n    // Start a new interval for the pause countdown\n    pulseIntervalRef.current = setInterval(() => {\n      setPauseTime(prevPauseTime => {\n        // When pause countdown finishes\n        if (prevPauseTime <= 1) {\n          // Auto-restart the pulse check countdown\n          setPulseCheckTime(120);\n          setShowChargeMonitor(false);\n          setCountdownAnnounced({\n            5: false,\n            4: false,\n            3: false,\n            2: false,\n            1: false\n          });\n          lastSpeechRef.current = \"\"; // Reset last speech\n\n          // Clear this interval and restart the pulse countdown\n          clearInterval(pulseIntervalRef.current);\n          startPulseCountdown();\n          return 10; // Reset the pause time for next time\n        }\n        return prevPauseTime - 1;\n      });\n    }, 1000);\n  }, [startPulseCountdown]);\n\n  // Handle Epinephrine button click\n  const handleEpinephrineClick = useCallback(() => {\n    // Start the main timer if this is the first feature activated\n    if (!clockStarted && !activeSection && !ventilationActive && !epiActive) {\n      startClock();\n      setStartTime(new Date()); // Set start time when first activated\n    }\n\n    // Toggle epinephrine state\n    setEpiActive(prev => {\n      if (prev) {\n        // If turning off, reset time and counter and stop flashing\n        setEpiTime(300);\n        setEpiCycles(0);\n        setEpiFlashing(false);\n      } else {\n        // If turning on, set initial state\n        setEpiTime(300);\n      }\n      return !prev;\n    });\n  }, [clockStarted, startClock, activeSection, ventilationActive, epiActive]);\n\n  // Update metronome state based on activeSection\n  useEffect(() => {\n    if (activeSection === 'metronome' || activeSection === 'pulse+metronome') {\n      setMetronomeRunning(true);\n    } else {\n      setMetronomeRunning(false);\n    }\n    if (!activeSection && !ventilationActive && !epiActive && clockStarted) {\n      if (clockIntervalRef.current) {\n        clearInterval(clockIntervalRef.current);\n        clockIntervalRef.current = null;\n      }\n      setSeconds(0);\n      setClockStarted(false);\n    }\n  }, [activeSection, ventilationActive, epiActive, clockStarted]);\n\n  // Metronome timer effect\n  useEffect(() => {\n    if (!metronomeRunning) return;\n    if (timerIntervalRef.current) {\n      clearInterval(timerIntervalRef.current);\n      timerIntervalRef.current = null;\n    }\n    const bpm = 110; // Fixed BPM\n    if (bpm <= 0) return;\n    const intervalTime = 60 / bpm * 1000;\n    timerIntervalRef.current = setInterval(playMetronomeClick, intervalTime);\n    playMetronomeClick();\n    return () => {\n      if (timerIntervalRef.current) {\n        clearInterval(timerIntervalRef.current);\n        timerIntervalRef.current = null;\n      }\n    };\n  }, [metronomeRunning, playMetronomeClick]);\n\n  // Ventilation timer effect\n  useEffect(() => {\n    if (!ventilationActive) return;\n    if (ventilationIntervalRef.current) {\n      clearInterval(ventilationIntervalRef.current);\n      ventilationIntervalRef.current = null;\n    }\n    if (ventilationRate <= 0) return;\n    const intervalTime = 60 / ventilationRate * 1000;\n    ventilationIntervalRef.current = setInterval(playVentilateSound, intervalTime);\n    playVentilateSound();\n    return () => {\n      if (ventilationIntervalRef.current) {\n        clearInterval(ventilationIntervalRef.current);\n        ventilationIntervalRef.current = null;\n      }\n    };\n  }, [ventilationActive, ventilationRate, playVentilateSound]);\n\n  // Epinephrine timer effect\n  useEffect(() => {\n    if (!epiActive) {\n      if (epiIntervalRef.current) {\n        clearInterval(epiIntervalRef.current);\n        epiIntervalRef.current = null;\n      }\n      setEpiFlashing(false); // Ensure flashing stops when deactivated\n      return;\n    }\n    epiIntervalRef.current = setInterval(() => {\n      setEpiTime(prevTime => {\n        // Start flashing during last 15 seconds of cycle\n        if (prevTime === 15) {\n          setEpiFlashing(true);\n        }\n        if (prevTime <= 0) {\n          // Increment the cycle counter when a full cycle completes\n          setEpiCycles(prev => prev + 1);\n          setEpiFlashing(false); // Stop flashing when the cycle completes\n          setEpiTime(300);\n          return 300;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n    return () => {\n      if (epiIntervalRef.current) {\n        clearInterval(epiIntervalRef.current);\n        epiIntervalRef.current = null;\n      }\n    };\n  }, [epiActive]);\n\n  // Update current time every second\n  useEffect(() => {\n    const timeUpdateInterval = setInterval(() => {\n      // Just for updating \"now\" clock display\n      if (clockStarted) {\n        setSeconds(prev => prev);\n      }\n    }, 1000);\n    return () => clearInterval(timeUpdateInterval);\n  }, [clockStarted]);\n\n  // Cleanup all intervals on unmount\n  useEffect(() => {\n    return () => {\n      if (audioContextRef.current) {\n        audioContextRef.current.close();\n      }\n      [timerIntervalRef, pulseIntervalRef, ventilationIntervalRef, epiIntervalRef, clockIntervalRef].forEach(ref => {\n        if (ref && ref.current) {\n          clearInterval(ref.current);\n          ref.current = null;\n        }\n      });\n    };\n  }, []);\n\n  // Format seconds to MM:SS\n  const formatTime = totalSeconds => {\n    const minutes = Math.floor(totalSeconds / 60);\n    const seconds = totalSeconds % 60;\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  // Format time as 24-hour clock HH:MM\n  const formatClock = date => {\n    if (!date) return \"--:--\";\n    const hours = date.getHours().toString().padStart(2, '0');\n    const minutes = date.getMinutes().toString().padStart(2, '0');\n    return `${hours}:${minutes}`;\n  };\n\n  // Common button styles\n  const buttonBaseStyle = {\n    border: 'none',\n    borderRadius: '8px',\n    padding: '12px',\n    cursor: 'pointer',\n    textAlign: 'left',\n    position: 'relative',\n    width: '100%',\n    height: '84px',\n    transition: 'all 0.2s ease',\n    boxShadow: '0 2px 4px rgba(0,0,0,0.2)'\n  };\n\n  // Timer display styles\n  const timerDisplayStyle = {\n    backgroundColor: COLORS.timerBg,\n    color: COLORS.white,\n    borderRadius: '10px',\n    padding: '10px',\n    textAlign: 'center',\n    position: 'relative',\n    boxShadow: '0 3px 6px rgba(0,0,0,0.16)',\n    marginBottom: '12px'\n  };\n\n  // Render the UI\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: COLORS.background,\n      minHeight: '100vh',\n      maxWidth: '100%',\n      margin: '0 auto',\n      padding: '10px',\n      display: 'flex',\n      flexDirection: 'column',\n      fontFamily: 'system-ui, -apple-system, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/central-pierce-logo.png\",\n        alt: \"Central Pierce Fire & Rescue\",\n        style: {\n          maxWidth: '80%',\n          height: 'auto',\n          maxHeight: '120px',\n          marginBottom: '5px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          margin: '0 0 5px 0',\n          color: COLORS.logoRed,\n          fontSize: '32px',\n          textAlign: 'center',\n          fontWeight: 'bold'\n        },\n        children: \"ArrestPro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleTimerClick,\n      title: \"Click to reset timer\",\n      style: timerDisplayStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '44px',\n          fontWeight: 'bold',\n          lineHeight: '1.2',\n          textShadow: '1px 1px 2px rgba(0,0,0,0.3)'\n        },\n        children: formatTime(seconds)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '2px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            width: '100%',\n            fontSize: '0.9rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: 'bold',\n                color: COLORS.white\n              },\n              children: \"Start: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontFamily: 'sans-serif',\n                color: COLORS.white\n              },\n              children: formatClock(startTime)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: 'bold',\n                color: COLORS.white\n              },\n              children: \"Now: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontFamily: 'sans-serif',\n                color: COLORS.white\n              },\n              children: formatClock(new Date())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 9\n      }, this), confirmReset && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          backgroundColor: 'rgba(0,0,0,0.85)',\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          borderRadius: '8px',\n          zIndex: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: COLORS.white,\n            marginBottom: '12px',\n            textAlign: 'center',\n            padding: '0 10px'\n          },\n          children: \"Reset timer to 00:00?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.stopPropagation();\n              resetClock();\n            },\n            style: {\n              backgroundColor: COLORS.logoRed,\n              color: COLORS.white,\n              border: 'none',\n              borderRadius: '4px',\n              padding: '8px 16px',\n              cursor: 'pointer',\n              fontWeight: 'bold'\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.stopPropagation();\n              cancelReset();\n            },\n            style: {\n              backgroundColor: '#7f8c8d',\n              color: COLORS.white,\n              border: 'none',\n              borderRadius: '4px',\n              padding: '8px 16px',\n              cursor: 'pointer',\n              fontWeight: 'bold'\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '8px',\n        margin: '0 0 8px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleMetronomeClick,\n        style: {\n          ...buttonBaseStyle,\n          backgroundColor: activeSection === 'metronome' || activeSection === 'pulse+metronome' ? COLORS.logoRed : COLORS.background,\n          color: activeSection === 'metronome' || activeSection === 'pulse+metronome' ? COLORS.white : COLORS.logoRed,\n          border: activeSection === 'metronome' || activeSection === 'pulse+metronome' ? 'none' : `1px solid ${COLORS.logoRed}`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            height: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Clock, {\n            style: {\n              marginRight: '10px'\n            },\n            size: 26\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '18px',\n                fontWeight: 'bold',\n                marginBottom: '2px'\n              },\n              children: \"Compressions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '14px',\n                fontWeight: 'bold',\n                opacity: 0.9\n              },\n              children: \"110 beats/min\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePulseCheckClick,\n        style: {\n          ...buttonBaseStyle,\n          backgroundColor: showChargeMonitor ? COLORS.pulseBlue : activeSection === 'pulse' || activeSection === 'pulse+metronome' ? COLORS.pulseBlue : COLORS.background,\n          color: activeSection === 'pulse' || activeSection === 'pulse+metronome' ? COLORS.white : COLORS.pulseBlue,\n          border: activeSection === 'pulse' || activeSection === 'pulse+metronome' ? 'none' : `1px solid ${COLORS.pulseBlue}`,\n          animation: showChargeMonitor ? 'pulse 1s infinite' : 'none',\n          animation: pulseFlashing ? 'flashAlternate 1s infinite' : 'none'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            height: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(HeartPulse, {\n            style: {\n              marginRight: '10px'\n            },\n            size: 26\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '18px',\n                fontWeight: 'bold',\n                marginBottom: '2px'\n              },\n              children: \"Pulse Check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '14px',\n                fontWeight: 'bold',\n                opacity: 0.9\n              },\n              children: \"2-min countdown\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 11\n        }, this), (activeSection === 'pulse' || activeSection === 'pulse+metronome') && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            right: '12px',\n            top: '50%',\n            transform: 'translateY(-50%)',\n            fontSize: '22px',\n            fontWeight: 'bold'\n          },\n          children: pulseCheckTime > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: Math.floor(pulseCheckTime / 60) + \":\" + (pulseCheckTime % 60).toString().padStart(2, '0')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: Math.floor(pauseTime / 60) + \":\" + (pauseTime % 60).toString().padStart(2, '0')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEpinephrineClick,\n        style: {\n          ...buttonBaseStyle,\n          backgroundColor: epiActive ? COLORS.logoYellow : COLORS.background,\n          color: epiActive ? COLORS.darkText : COLORS.logoYellow,\n          border: epiActive ? 'none' : `1px solid ${COLORS.logoYellow}`,\n          animation: epiFlashing ? 'flash 1s infinite' : 'none'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            height: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Syringe, {\n            style: {\n              marginRight: '10px'\n            },\n            size: 26\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '18px',\n                fontWeight: 'bold',\n                marginBottom: '2px'\n              },\n              children: \"Epinephrine\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '14px',\n                fontWeight: 'bold',\n                opacity: 0.9\n              },\n              children: \"5-min countdown\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 737,\n              columnNumber: 15\n            }, this), epiActive && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '14px',\n                fontWeight: 'bold',\n                opacity: 0.9\n              },\n              children: [\"cycles: \", epiCycles]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 741,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 733,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 1\n        }, this), epiActive && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            right: '12px',\n            top: '50%',\n            transform: 'translateY(-50%)',\n            fontSize: '22px',\n            fontWeight: 'bold'\n          },\n          children: [Math.floor(epiTime / 60), \":\", (epiTime % 60).toString().padStart(2, '0')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleVentilation,\n        style: {\n          ...buttonBaseStyle,\n          backgroundColor: ventilationActive ? COLORS.ventGreen : COLORS.background,\n          color: ventilationActive ? COLORS.white : COLORS.ventGreen,\n          border: ventilationActive ? 'none' : `1px solid ${COLORS.ventGreen}`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            height: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Wind, {\n            style: {\n              marginBottom: '5px'\n            },\n            size: 26\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '18px',\n                fontWeight: 'bold',\n                marginBottom: '2px'\n              },\n              children: \"Ventilation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 780,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '14px',\n                fontWeight: 'bold',\n                opacity: 0.9\n              },\n              children: [ventilationRate, \" breaths/min\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 783,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 779,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 7\n    }, this), ventilationActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: COLORS.sliderBg,\n        padding: '10px',\n        borderRadius: '8px',\n        marginBottom: '8px',\n        boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '5px',\n          fontWeight: 'bold',\n          fontSize: '15px',\n          color: '#333'\n        },\n        children: [\"Ventilation: \", ventilationRate, \" breaths/min\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"5\",\n          max: \"20\",\n          value: ventilationRate,\n          onChange: e => setVentilationRate(parseInt(e.target.value)),\n          style: {\n            width: '100%',\n            height: '22px',\n            appearance: 'none',\n            borderRadius: '10px',\n            background: `linear-gradient(to right, \n                  ${COLORS.ventGreen} 0%, \n                  ${COLORS.ventGreen} ${(ventilationRate - 5) / 15 * 100}%, \n                  #ddd ${(ventilationRate - 5) / 15 * 100}%, \n                  #ddd 100%)`,\n            outline: 'none',\n            transition: 'background 0.3s ease',\n            cursor: 'pointer'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 814,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            left: `${(ventilationRate - 5) / 15 * 100}%`,\n            top: '-4px',\n            width: '24px',\n            height: '24px',\n            borderRadius: '50%',\n            backgroundColor: COLORS.white,\n            boxShadow: '0 2px 4px rgba(0,0,0,0.3)',\n            transform: 'translateX(-12px)',\n            pointerEvents: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          fontSize: '14px',\n          marginTop: '5px',\n          color: '#555'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"15\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 798,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      dangerouslySetInnerHTML: {\n        __html: `\n          @keyframes flash {\n          0% { background-color: ${COLORS.logoYellow}; }\n          50% { background-color: #ffffff; } \n          100% { background-color: ${COLORS.logoYellow}; }\n          }     \n          \n          @keyframes flashAlternate {\n            0% {\n              background-color: ${COLORS.pulseBlue};\n              color: inherit;\n            }\n            50% {\n              background-color: #ffffff;\n              color: black;\n            }\n            100% {\n              background-color: ${COLORS.pulseBlue};\n              color: inherit;\n            }\n}\n\n          \n          /* Improve button styles for mobile */\n          button {\n            -webkit-tap-highlight-color: transparent;\n            user-select: none;\n          }\n          \n          /* Custom slider styles */\n          input[type=range]::-webkit-slider-thumb {\n            -webkit-appearance: none;\n            width: 24px;\n            height: 24px;\n            border-radius: 50%;\n            background: ${COLORS.white};\n            box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n            cursor: pointer;\n          }\n          \n          input[type=range]::-moz-range-thumb {\n            width: 24px;\n            height: 24px;\n            border-radius: 50%;\n            background: ${COLORS.white};\n            box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n            cursor: pointer;\n            border: none;\n          }\n          \n          /* Full height mobile container */\n          html, body, #root {\n            margin: 0;\n            padding: 0;\n            height: 100%;\n            overflow: hidden;\n            background-color: ${COLORS.background};\n          }\n        `\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 864,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 507,\n    columnNumber: 5\n  }, this);\n};\n_s(CPRTempoApp, \"9IJiLmVHVN/E/2p/cQQrA06Y/aA=\");\n_c = CPRTempoApp;\nexport default CPRTempoApp;\nvar _c;\n$RefreshReg$(_c, \"CPRTempoApp\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","HeartPulse","Clock","Syringe","Wind","styles","jsxDEV","_jsxDEV","CPRTempoApp","_s","activeSection","setActiveSection","seconds","setSeconds","pulseCheckTime","setPulseCheckTime","pauseTime","setPauseTime","metronomeRunning","setMetronomeRunning","ventilationActive","setVentilationActive","ventilationRate","setVentilationRate","showChargeMonitor","setShowChargeMonitor","epiActive","setEpiActive","epiTime","setEpiTime","epiCycles","setEpiCycles","clockStarted","setClockStarted","startTime","setStartTime","countdownAnnounced","setCountdownAnnounced","confirmReset","setConfirmReset","pulseFlashing","setPulseFlashing","epiFlashing","setEpiFlashing","audioContextRef","timerIntervalRef","pulseIntervalRef","ventilationIntervalRef","epiIntervalRef","clockIntervalRef","lastSpeechRef","COLORS","background","logoRed","logoYellow","pulseBlue","ventGreen","white","darkText","timerBg","sliderBg","playSpeech","text","current","window","utterance","SpeechSynthesisUtterance","rate","volume","speechSynthesis","speak","createAudioContext","AudioContext","webkitAudioContext","e","console","error","getAudioContext","startClock","clearInterval","interval","setInterval","prev","resetClock","handleTimerClick","cancelReset","toggleVentilation","Date","playMetronomeClick","ctx","state","resume","oscillator","createOscillator","type","frequency","value","connect","destination","start","stop","currentTime","playVentilateSound","handleMetronomeClick","handlePulseCheckClick","startPulseCountdown","prevTime","toString","setTimeout","startPauseCountdown","prevPauseTime","handleEpinephrineClick","bpm","intervalTime","timeUpdateInterval","close","forEach","ref","formatTime","totalSeconds","minutes","Math","floor","padStart","formatClock","date","hours","getHours","getMinutes","buttonBaseStyle","border","borderRadius","padding","cursor","textAlign","position","width","height","transition","boxShadow","timerDisplayStyle","backgroundColor","color","marginBottom","style","minHeight","maxWidth","margin","display","flexDirection","fontFamily","children","src","alt","maxHeight","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","fontWeight","onClick","title","lineHeight","textShadow","marginTop","justifyContent","top","left","right","bottom","alignItems","zIndex","gap","stopPropagation","marginRight","size","opacity","animation","transform","min","max","onChange","parseInt","target","appearance","outline","pointerEvents","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["/Users/davidhelmers/arrestpro/src/CPRTempoApp.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { HeartPulse, Clock, Syringe, Wind } from 'lucide-react';\nimport styles from './CPRTempoApp.module.css';\n\n// Create a simplified version that will definitely compile\nconst CPRTempoApp = () => {\n  // State variables\n  const [activeSection, setActiveSection] = useState(null);\n  const [seconds, setSeconds] = useState(0);\n  const [pulseCheckTime, setPulseCheckTime] = useState(120); // 2 minutes countdown\n  const [pauseTime, setPauseTime] = useState(10); // 10 second pause countdown\n  const [metronomeRunning, setMetronomeRunning] = useState(false);\n  const [ventilationActive, setVentilationActive] = useState(false);\n  const [ventilationRate, setVentilationRate] = useState(11); // Default ventilation rate\n  const [showChargeMonitor, setShowChargeMonitor] = useState(false);\n  const [epiActive, setEpiActive] = useState(false);\n  const [epiTime, setEpiTime] = useState(300); // 5 minutes countdown\n  const [epiCycles, setEpiCycles] = useState(0); // Counter for epinephrine cycles\n  const [clockStarted, setClockStarted] = useState(false);\n  const [startTime, setStartTime] = useState(null); // Track when the metronome was started\n  const [countdownAnnounced, setCountdownAnnounced] = useState({5: false, 4: false, 3: false, 2: false, 1: false}); // Track announced numbers\n  const [confirmReset, setConfirmReset] = useState(false); // State for reset confirmation\n\n  const [pulseFlashing, setPulseFlashing] = useState(false); // For pulse button flashing in last 5 seconds\n  const [epiFlashing, setEpiFlashing] = useState(false); // For epinephrine button flashing in last 5 seconds\n\n\n  // Refs for safer interval handling\n  const audioContextRef = useRef(null);\n  const timerIntervalRef = useRef(null);\n  const pulseIntervalRef = useRef(null);\n  const ventilationIntervalRef = useRef(null);\n  const epiIntervalRef = useRef(null);\n  const clockIntervalRef = useRef(null);\n  const lastSpeechRef = useRef(\"\");\n\n  // Brand colors from logo\n  const COLORS = {\n    background: '#1e2126',     // Dark background\n    logoRed: '#ff4136',        // Red from logo\n    logoYellow: '#f4eb00ff',     // Yellow from logo\n    pulseBlue: '#3498db',      // Blue for pulse check\n    ventGreen: '#2ecc40',      // Green for ventilation\n    white: '#ffffff',          // White text\n    darkText: '#1a1a1a',       // Dark text for yellow buttons\n    timerBg: '#2c3e50',        // Timer background\n    sliderBg: '#ecf0f1',       // Slider background\n  };\n\n  // Play speech synthesis - prevent duplicates by tracking last phrase\n  const playSpeech = useCallback((text) => {\n    // Don't repeat the same text twice in a row\n    if (lastSpeechRef.current === text) {\n      return;\n    }\n    \n    if ('speechSynthesis' in window) {\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.rate = 1.0;\n      utterance.volume = 1.0;\n      window.speechSynthesis.speak(utterance);\n      lastSpeechRef.current = text;\n    }\n  }, []);\n\n  // Create audio context\n  const createAudioContext = useCallback(() => {\n    if (!audioContextRef.current) {\n      try {\n        audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      } catch (e) {\n        console.error(\"Failed to create audio context:\", e);\n      }\n    }\n    return audioContextRef.current;\n  }, []);\n\n  // Get audio context\n  const getAudioContext = useCallback(() => {\n    return audioContextRef.current;\n  }, []);\n\n  // Start the main clock\n  const startClock = useCallback(() => {\n    if (clockIntervalRef.current) {\n      clearInterval(clockIntervalRef.current);\n    }\n    \n    const interval = setInterval(() => {\n      setSeconds(prev => prev + 1);\n    }, 1000);\n    \n    clockIntervalRef.current = interval;\n    setClockStarted(true);\n  }, []);\n  \n  // Reset the main clock - with confirmation\n  const resetClock = useCallback(() => {\n    setSeconds(0);\n    setConfirmReset(false);\n    \n    // Only start the clock if there's an active feature\n    if (!clockStarted && (activeSection || ventilationActive || epiActive)) {\n      startClock();\n    } else if (!activeSection && !ventilationActive && !epiActive) {\n      // If everything is inactive, just reset without starting\n      if (clockIntervalRef.current) {\n        clearInterval(clockIntervalRef.current);\n        clockIntervalRef.current = null;\n      }\n      setClockStarted(false);\n    }\n  }, [clockStarted, startClock, activeSection, ventilationActive, epiActive]);\n  \n  // Handle timer click to show confirmation\n  const handleTimerClick = useCallback(() => {\n    // If timer is already at 0, no need for confirmation\n    if (seconds === 0) return;\n    \n    // Show confirmation dialog\n    setConfirmReset(true);\n  }, [seconds]);\n  \n  // Cancel reset\n  const cancelReset = useCallback(() => {\n    setConfirmReset(false);\n  }, []);\n\n  // Toggle ventilation\n  const toggleVentilation = useCallback(() => {\n    // Start the main timer if this is the first feature activated\n    if (!clockStarted && !activeSection && !ventilationActive && !epiActive) {\n      startClock();\n      setStartTime(new Date()); // Set start time when first activated\n    }\n    \n    setVentilationActive(prev => !prev);\n  }, [clockStarted, startClock, activeSection, ventilationActive, epiActive]);\n\n  // Play metronome click\n  const playMetronomeClick = useCallback(() => {\n    try {\n      const ctx = getAudioContext() || createAudioContext();\n      if (!ctx) return;\n      \n      if (ctx.state === 'suspended') {\n        ctx.resume();\n      }\n      \n      const oscillator = ctx.createOscillator();\n      oscillator.type = 'sine';\n      oscillator.frequency.value = 800;\n      oscillator.connect(ctx.destination);\n      oscillator.start();\n      oscillator.stop(ctx.currentTime + 0.05);\n    } catch (e) {\n      console.error(\"Error playing sound:\", e);\n    }\n  }, [getAudioContext, createAudioContext]);\n\n  // Play ventilate sound\n  const playVentilateSound = useCallback(() => {\n    playSpeech(\"ventilate\");\n  }, [playSpeech]);\n\n  // Handle Metronome button click\n  const handleMetronomeClick = useCallback(() => {\n    createAudioContext();\n    \n    // Start the main timer if this is the first feature activated\n    if (!clockStarted && !activeSection && !ventilationActive && !epiActive) {\n      startClock();\n      setStartTime(new Date()); // Set start time when first activated\n    }\n    \n    if (activeSection === 'metronome' || activeSection === 'pulse+metronome') {\n      if (activeSection === 'pulse+metronome') {\n        setActiveSection('pulse');\n      } else {\n        setActiveSection(null);\n      }\n    } else {\n      if (activeSection === 'pulse') {\n        setActiveSection('pulse+metronome');\n      } else {\n        setActiveSection('metronome');\n        // Only set start time if it hasn't been set yet\n        if (!startTime) {\n          setStartTime(new Date());\n        }\n      }\n    }\n  }, [activeSection, createAudioContext, clockStarted, startClock, ventilationActive, epiActive, startTime]);\n\n// Handle Pulse check button click\nconst handlePulseCheckClick = useCallback(() => {\n  // Start the main timer if this is the first feature activated\n  if (!clockStarted && !activeSection && !ventilationActive && !epiActive) {\n    startClock();\n    setStartTime(new Date()); // Set start time when first activated\n  }\n  \n  if (activeSection === 'pulse' || activeSection === 'pulse+metronome') {\n    if (activeSection === 'pulse+metronome') {\n      setActiveSection('metronome');\n    } else {\n      setActiveSection(null);\n    }\n    \n    // Clear both intervals to be safe\n    if (pulseIntervalRef.current) {\n      clearInterval(pulseIntervalRef.current);\n      pulseIntervalRef.current = null;\n    }\n    \n    setPulseFlashing(false); // Stop flashing\n  } else {\n    if (activeSection === 'metronome') {\n      setActiveSection('pulse+metronome');\n    } else {\n      setActiveSection('pulse');\n    }\n    \n    // Reset all values\n    setPulseCheckTime(120);\n    setPauseTime(10);\n    setShowChargeMonitor(false);\n    setCountdownAnnounced({5: false, 4: false, 3: false, 2: false, 1: false});\n    lastSpeechRef.current = \"\"; // Reset last speech to allow new announcements\n    \n    // Start the main pulse check countdown\n    startPulseCountdown();\n  }\n}, [activeSection, playSpeech, countdownAnnounced, clockStarted, startClock, ventilationActive, epiActive]);\n\n// Separate function to start pulse countdown\nconst startPulseCountdown = useCallback(() => {\n  // Clear any existing interval first\n  if (pulseIntervalRef.current) {\n    clearInterval(pulseIntervalRef.current);\n  }\n  \n  pulseIntervalRef.current = setInterval(() => {\n    setPulseCheckTime(prevTime => {\n      // Show charge monitor warning at 15 seconds\n      if (prevTime === 15) {\n        setShowChargeMonitor(true);\n        playSpeech(\"Charge monitor\");\n      }\n      if (prevTime === 15) {\n        setPulseFlashing(true);\n      }\n\n      // Countdown for last 5 seconds\n      if (prevTime <= 5 && prevTime > 0) {\n        if (!countdownAnnounced[prevTime]) {\n          playSpeech(prevTime.toString());\n          setCountdownAnnounced(prev => ({ ...prev, [prevTime]: true }));\n          \n          if (prevTime === 1) {\n            setTimeout(() => {\n              playSpeech(\"Stop compression\");\n            }, 1000);\n          }\n        }\n      }\n      \n      // When pulse check countdown reaches zero\n      if (prevTime === 0) {\n        setPulseFlashing(false);\n        \n        // Clear this interval and start the pause countdown\n        clearInterval(pulseIntervalRef.current);\n        startPauseCountdown();\n        \n        return 0; // Keep it at zero\n      }\n      \n      return prevTime - 1;\n    });\n  }, 1000);\n}, [playSpeech, countdownAnnounced]);\n\n// Separate function to start pause countdown\nconst startPauseCountdown = useCallback(() => {\n  // Start a new interval for the pause countdown\n  pulseIntervalRef.current = setInterval(() => {\n    setPauseTime(prevPauseTime => {\n      // When pause countdown finishes\n      if (prevPauseTime <= 1) {\n        // Auto-restart the pulse check countdown\n        setPulseCheckTime(120);\n        setShowChargeMonitor(false);\n        setCountdownAnnounced({ 5: false, 4: false, 3: false, 2: false, 1: false });\n        lastSpeechRef.current = \"\"; // Reset last speech\n        \n        // Clear this interval and restart the pulse countdown\n        clearInterval(pulseIntervalRef.current);\n        startPulseCountdown();\n        \n        return 10; // Reset the pause time for next time\n      }\n      \n      return prevPauseTime - 1;\n    });\n  }, 1000);\n}, [startPulseCountdown]);\n  \n  // Handle Epinephrine button click\n  const handleEpinephrineClick = useCallback(() => {\n    // Start the main timer if this is the first feature activated\n    if (!clockStarted && !activeSection && !ventilationActive && !epiActive) {\n      startClock();\n      setStartTime(new Date()); // Set start time when first activated\n    }\n    \n    // Toggle epinephrine state\n    setEpiActive(prev => {\n      if (prev) {\n        // If turning off, reset time and counter and stop flashing\n        setEpiTime(300);\n        setEpiCycles(0);\n        setEpiFlashing(false);\n      } else {\n        // If turning on, set initial state\n        setEpiTime(300);\n      }\n      return !prev;\n    });\n  }, [clockStarted, startClock, activeSection, ventilationActive, epiActive]);\n\n  // Update metronome state based on activeSection\n  useEffect(() => {\n    if (activeSection === 'metronome' || activeSection === 'pulse+metronome') {\n      setMetronomeRunning(true);\n    } else {\n      setMetronomeRunning(false);\n    }\n    \n    if (!activeSection && !ventilationActive && !epiActive && clockStarted) {\n      if (clockIntervalRef.current) {\n        clearInterval(clockIntervalRef.current);\n        clockIntervalRef.current = null;\n      }\n      setSeconds(0);\n      setClockStarted(false);\n    }\n  }, [activeSection, ventilationActive, epiActive, clockStarted]);\n\n  // Metronome timer effect\n  useEffect(() => {\n    if (!metronomeRunning) return;\n    \n    if (timerIntervalRef.current) {\n      clearInterval(timerIntervalRef.current);\n      timerIntervalRef.current = null;\n    }\n    \n    const bpm = 110; // Fixed BPM\n    if (bpm <= 0) return;\n    \n    const intervalTime = (60 / bpm) * 1000;\n    timerIntervalRef.current = setInterval(playMetronomeClick, intervalTime);\n    \n    playMetronomeClick();\n    \n    return () => {\n      if (timerIntervalRef.current) {\n        clearInterval(timerIntervalRef.current);\n        timerIntervalRef.current = null;\n      }\n    };\n  }, [metronomeRunning, playMetronomeClick]);\n\n  // Ventilation timer effect\n  useEffect(() => {\n    if (!ventilationActive) return;\n    \n    if (ventilationIntervalRef.current) {\n      clearInterval(ventilationIntervalRef.current);\n      ventilationIntervalRef.current = null;\n    }\n    \n    if (ventilationRate <= 0) return;\n    \n    const intervalTime = (60 / ventilationRate) * 1000;\n    ventilationIntervalRef.current = setInterval(playVentilateSound, intervalTime);\n    \n    playVentilateSound();\n    \n    return () => {\n      if (ventilationIntervalRef.current) {\n        clearInterval(ventilationIntervalRef.current);\n        ventilationIntervalRef.current = null;\n      }\n    };\n  }, [ventilationActive, ventilationRate, playVentilateSound]);\n\n  // Epinephrine timer effect\n  useEffect(() => {\n    if (!epiActive) {\n      if (epiIntervalRef.current) {\n        clearInterval(epiIntervalRef.current);\n        epiIntervalRef.current = null;\n      }\n      setEpiFlashing(false); // Ensure flashing stops when deactivated\n      return;\n    }\n    \n    epiIntervalRef.current = setInterval(() => {\n      setEpiTime(prevTime => {\n        // Start flashing during last 15 seconds of cycle\n        if (prevTime === 15) {\n          setEpiFlashing(true);\n        }\n        \n        if (prevTime <= 0) {\n          // Increment the cycle counter when a full cycle completes\n          setEpiCycles(prev => prev + 1);\n          setEpiFlashing(false); // Stop flashing when the cycle completes\n          setEpiTime(300);\n          return 300;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n    \n    return () => {\n      if (epiIntervalRef.current) {\n        clearInterval(epiIntervalRef.current);\n        epiIntervalRef.current = null;\n      }\n    };\n  }, [epiActive]);\n\n  // Update current time every second\n  useEffect(() => {\n    const timeUpdateInterval = setInterval(() => {\n      // Just for updating \"now\" clock display\n      if (clockStarted) {\n        setSeconds(prev => prev);\n      }\n    }, 1000);\n    \n    return () => clearInterval(timeUpdateInterval);\n  }, [clockStarted]);\n\n  // Cleanup all intervals on unmount\n  useEffect(() => {\n    return () => {\n      if (audioContextRef.current) {\n        audioContextRef.current.close();\n      }\n      \n      [timerIntervalRef, pulseIntervalRef, ventilationIntervalRef, epiIntervalRef, clockIntervalRef].forEach(ref => {\n        if (ref && ref.current) {\n          clearInterval(ref.current);\n          ref.current = null;\n        }\n      });\n    };\n  }, []);\n\n  // Format seconds to MM:SS\n  const formatTime = (totalSeconds) => {\n    const minutes = Math.floor(totalSeconds / 60);\n    const seconds = totalSeconds % 60;\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n  \n  // Format time as 24-hour clock HH:MM\n  const formatClock = (date) => {\n    if (!date) return \"--:--\";\n    const hours = date.getHours().toString().padStart(2, '0');\n    const minutes = date.getMinutes().toString().padStart(2, '0');\n    return `${hours}:${minutes}`;\n  };\n\n  // Common button styles\n  const buttonBaseStyle = {\n    border: 'none',\n    borderRadius: '8px',\n    padding: '12px',\n    cursor: 'pointer',\n    textAlign: 'left',\n    position: 'relative',\n    width: '100%',\n    height: '84px',\n    transition: 'all 0.2s ease',\n    boxShadow: '0 2px 4px rgba(0,0,0,0.2)',\n  };\n\n  // Timer display styles\n  const timerDisplayStyle = {\n    backgroundColor: COLORS.timerBg,\n    color: COLORS.white,\n    borderRadius: '10px',\n    padding: '10px',\n    textAlign: 'center',\n    position: 'relative',\n    boxShadow: '0 3px 6px rgba(0,0,0,0.16)',\n    marginBottom: '12px',\n  };\n\n  // Render the UI\n  return (\n    <div style={{ \n      backgroundColor: COLORS.background, \n      minHeight: '100vh',\n      maxWidth: '100%',\n      margin: '0 auto',\n      padding: '10px',\n      display: 'flex',\n      flexDirection: 'column',\n      fontFamily: 'system-ui, -apple-system, sans-serif'\n    }}>\n      {/* Logo and Title Section */}\n  {/* Logo Image */}\n  <div style={{ textAlign: 'center', marginBottom: '10px' }}>\n  <img \n    src=\"/central-pierce-logo.png\" \n    alt=\"Central Pierce Fire & Rescue\" \n    style={{ \n      maxWidth: '80%', \n      height: 'auto',\n      maxHeight: '120px',\n      marginBottom: '5px'\n    }} \n  />\n</div>\n        <div>\n        {/* App Title */}\n        <h1 style={{ \n          margin: '0 0 5px 0',\n          color: COLORS.logoRed, \n          fontSize: '32px',\n          textAlign: 'center',\n          fontWeight: 'bold'\n        }}>\n          ArrestPro\n        </h1>\n      </div>\n\n      {/* Timer Display with click to reset - with confirmation */}\n      <div\n        onClick={handleTimerClick}\n        title=\"Click to reset timer\"\n        style={timerDisplayStyle}\n      >\n        <div style={{ \n          fontSize: '44px', \n          fontWeight: 'bold',\n          lineHeight: '1.2',\n          textShadow: '1px 1px 2px rgba(0,0,0,0.3)'\n        }}>\n          {formatTime(seconds)}\n        </div>\n        <div style={{ marginTop: '2px' }}>\n          <div style={{ \n            display: 'flex', \n            justifyContent: 'space-between', \n            width: '100%',\n            fontSize: '0.9rem'\n          }}>\n            <div>\n              <span style={{ fontWeight: 'bold', color: COLORS.white }}>Start: </span>\n              <span style={{ fontFamily: 'sans-serif', color: COLORS.white }}>{formatClock(startTime)}</span>\n            </div>\n            <div>\n              <span style={{ fontWeight: 'bold', color: COLORS.white }}>Now: </span>\n              <span style={{ fontFamily: 'sans-serif', color: COLORS.white }}>{formatClock(new Date())}</span>\n            </div>\n          </div>\n        </div>\n        \n        {/* Reset Confirmation Dialog */}\n        {confirmReset && (\n          <div style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            backgroundColor: 'rgba(0,0,0,0.85)',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            borderRadius: '8px',\n            zIndex: 10\n          }}>\n            <div style={{ color: COLORS.white, marginBottom: '12px', textAlign: 'center', padding: '0 10px' }}>\n              Reset timer to 00:00?\n            </div>\n            <div style={{ display: 'flex', gap: '10px' }}>\n              <button \n                onClick={(e) => { e.stopPropagation(); resetClock(); }}\n                style={{\n                  backgroundColor: COLORS.logoRed,\n                  color: COLORS.white,\n                  border: 'none',\n                  borderRadius: '4px',\n                  padding: '8px 16px',\n                  cursor: 'pointer',\n                  fontWeight: 'bold'\n                }}\n              >\n                Reset\n              </button>\n              <button \n                onClick={(e) => { e.stopPropagation(); cancelReset(); }}\n                style={{\n                  backgroundColor: '#7f8c8d',\n                  color: COLORS.white,\n                  border: 'none',\n                  borderRadius: '4px',\n                  padding: '8px 16px',\n                  cursor: 'pointer',\n                  fontWeight: 'bold'\n                }}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Main Buttons */}\n      <div style={{ \n        display: 'flex', \n        flexDirection: 'column',\n        gap: '8px',\n        margin: '0 0 8px 0'\n        }}>\n        {/* Metronome Button */}\n        <button\n          onClick={handleMetronomeClick}\n          style={{\n            ...buttonBaseStyle,\n            backgroundColor: (activeSection === 'metronome' || activeSection === 'pulse+metronome') \n              ? COLORS.logoRed \n              : COLORS.background,\n            color: (activeSection === 'metronome' || activeSection === 'pulse+metronome') \n              ? COLORS.white \n              : COLORS.logoRed,\n            border: (activeSection === 'metronome' || activeSection === 'pulse+metronome')\n              ? 'none'\n              : `1px solid ${COLORS.logoRed}`\n          }}\n        >\n          <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', height: '100%' }}>\n            <Clock style={{ marginRight: '10px' }} size={26} />\n            <div>\n              <div style={{ fontSize: '18px', fontWeight: 'bold', marginBottom: '2px' }}>\n                Compressions\n              </div>\n              <div style={{ fontSize: '14px', fontWeight: 'bold', opacity: 0.9 }}>\n                110 beats/min\n              </div>\n            </div>\n          </div>\n        </button>\n       \n        {/* Pulse Check Button */}\n        <button\n          onClick={handlePulseCheckClick}\n          style={{\n            ...buttonBaseStyle,\n            backgroundColor: showChargeMonitor \n              ? COLORS.pulseBlue \n              : (activeSection === 'pulse' || activeSection === 'pulse+metronome') \n                ? COLORS.pulseBlue \n                : COLORS.background,\n            color: (activeSection === 'pulse' || activeSection === 'pulse+metronome') \n              ? COLORS.white \n              : COLORS.pulseBlue,\n            border: (activeSection === 'pulse' || activeSection === 'pulse+metronome') \n              ? 'none' \n              : `1px solid ${COLORS.pulseBlue}`,\n            animation: showChargeMonitor ? 'pulse 1s infinite' : 'none',\n            animation: pulseFlashing ? 'flashAlternate 1s infinite' : 'none'\n          }}\n        >\n          <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', height: '100%' }}>\n            <HeartPulse style={{ marginRight: '10px' }} size={26} />\n            <div>\n              <div style={{ fontSize: '18px', fontWeight: 'bold', marginBottom: '2px' }}>\n                Pulse Check\n              </div>\n              <div style={{ fontSize: '14px', fontWeight: 'bold', opacity: 0.9 }}>\n                2-min countdown\n              </div>\n            </div>\n          </div>\n          {(activeSection === 'pulse' || activeSection === 'pulse+metronome') && (\n            <div style={{ \n              position: 'absolute',\n              right: '12px',\n              top: '50%',\n              transform: 'translateY(-50%)',\n              fontSize: '22px',\n              fontWeight: 'bold'\n            }}>\n              {pulseCheckTime > 0 ? (\n                <div>{Math.floor(pulseCheckTime / 60) + \":\" + (pulseCheckTime % 60).toString().padStart(2, '0')}</div>\n              ) : (\n                <div>{Math.floor(pauseTime / 60) + \":\" + (pauseTime % 60).toString().padStart(2, '0')}</div>\n              )}\n            </div>\n          )}\n        </button>\n       \n        {/* Epinephrine Button */}\n        <button\n          onClick={handleEpinephrineClick}\n          style={{\n            ...buttonBaseStyle,\n            backgroundColor: epiActive \n              ? COLORS.logoYellow \n              : COLORS.background,\n            color: epiActive \n              ? COLORS.darkText \n              : COLORS.logoYellow,\n            border: epiActive \n              ? 'none' \n              : `1px solid ${COLORS.logoYellow}`,\n              animation: epiFlashing ? 'flash 1s infinite' : 'none'  \n          }}\n        >\n<div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', height: '100%' }}>\n            <Syringe style={{ marginRight: '10px' }} size={26} />\n            <div>\n              <div style={{ fontSize: '18px', fontWeight: 'bold', marginBottom: '2px' }}>\n                Epinephrine\n              </div>\n              <div style={{ fontSize: '14px', fontWeight: 'bold', opacity: 0.9 }}>\n                5-min countdown\n              </div>\n              {epiActive && \n                <div style={{ fontSize: '14px', fontWeight: 'bold', opacity: 0.9 }}>\n                  cycles: {epiCycles}\n                </div>\n              }\n            </div>\n          </div>\n          {epiActive && (\n            <div style={{ \n              position: 'absolute',\n              right: '12px',\n              top: '50%',\n              transform: 'translateY(-50%)',\n              fontSize: '22px',\n              fontWeight: 'bold'\n            }}>\n              {Math.floor(epiTime / 60)}:{(epiTime % 60).toString().padStart(2, '0')}\n            </div>\n          )}\n        </button>\n\n        {/* Ventilation Button */}\n        <button\n          onClick={toggleVentilation}\n          style={{\n            ...buttonBaseStyle,\n            backgroundColor: ventilationActive \n              ? COLORS.ventGreen \n              : COLORS.background,\n            color: ventilationActive \n              ? COLORS.white \n              : COLORS.ventGreen,\n            border: ventilationActive \n              ? 'none' \n              : `1px solid ${COLORS.ventGreen}`\n          }}\n        >\n          <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', height: '100%' }}>\n            <Wind style={{ marginBottom: '5px' }} size={26} />\n            <div>\n              <div style={{ fontSize: '18px', fontWeight: 'bold', marginBottom: '2px' }}>\n                Ventilation\n              </div>\n              <div style={{ fontSize: '14px', fontWeight: 'bold', opacity: 0.9 }}>\n                {ventilationRate} breaths/min\n              </div>\n            </div>\n          </div>\n        </button>\n       \n\n\n\n\n      </div>\n\n      {/* Ventilation Rate Control - compact slider */}\n      {ventilationActive && (\n        <div style={{ \n          backgroundColor: COLORS.sliderBg,\n          padding: '10px',\n          borderRadius: '8px',\n          marginBottom: '8px',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n        }}>\n          <div style={{ \n            marginBottom: '5px',\n            fontWeight: 'bold',\n            fontSize: '15px',\n            color: '#333'\n          }}>\n            Ventilation: {ventilationRate} breaths/min\n          </div>\n          <div style={{ position: 'relative' }}>\n            <input\n              type=\"range\"\n              min=\"5\"\n              max=\"20\"\n              value={ventilationRate}\n              onChange={(e) => setVentilationRate(parseInt(e.target.value))}\n              style={{ \n                width: '100%',\n                height: '22px',\n                appearance: 'none',\n                borderRadius: '10px',\n                background: `linear-gradient(to right, \n                  ${COLORS.ventGreen} 0%, \n                  ${COLORS.ventGreen} ${(ventilationRate-5)/15*100}%, \n                  #ddd ${(ventilationRate-5)/15*100}%, \n                  #ddd 100%)`,\n                outline: 'none',\n                transition: 'background 0.3s ease',\n                cursor: 'pointer'\n              }}\n            />\n            <div style={{ \n              position: 'absolute',\n              left: `${(ventilationRate-5)/15*100}%`,\n              top: '-4px',\n              width: '24px',\n              height: '24px',\n              borderRadius: '50%',\n              backgroundColor: COLORS.white,\n              boxShadow: '0 2px 4px rgba(0,0,0,0.3)',\n              transform: 'translateX(-12px)',\n              pointerEvents: 'none'\n            }}></div>\n          </div>\n          <div style={{ \n            display: 'flex', \n            justifyContent: 'space-between', \n            fontSize: '14px',\n            marginTop: '5px',\n            color: '#555'\n          }}>\n            <span>5</span>\n            <span>10</span>\n            <span>15</span>\n            <span>20</span>\n          </div>\n        </div>\n      )}\n\n      {/* Animation style for the pulse flash */}\n      <style dangerouslySetInnerHTML={{\n        __html: `\n          @keyframes flash {\n          0% { background-color: ${COLORS.logoYellow}; }\n          50% { background-color: #ffffff; } \n          100% { background-color: ${COLORS.logoYellow}; }\n          }     \n          \n          @keyframes flashAlternate {\n            0% {\n              background-color: ${COLORS.pulseBlue};\n              color: inherit;\n            }\n            50% {\n              background-color: #ffffff;\n              color: black;\n            }\n            100% {\n              background-color: ${COLORS.pulseBlue};\n              color: inherit;\n            }\n}\n\n          \n          /* Improve button styles for mobile */\n          button {\n            -webkit-tap-highlight-color: transparent;\n            user-select: none;\n          }\n          \n          /* Custom slider styles */\n          input[type=range]::-webkit-slider-thumb {\n            -webkit-appearance: none;\n            width: 24px;\n            height: 24px;\n            border-radius: 50%;\n            background: ${COLORS.white};\n            box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n            cursor: pointer;\n          }\n          \n          input[type=range]::-moz-range-thumb {\n            width: 24px;\n            height: 24px;\n            border-radius: 50%;\n            background: ${COLORS.white};\n            box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n            cursor: pointer;\n            border: none;\n          }\n          \n          /* Full height mobile container */\n          html, body, #root {\n            margin: 0;\n            padding: 0;\n            height: 100%;\n            overflow: hidden;\n            background-color: ${COLORS.background};\n          }\n        `\n      }} />\n    </div>\n  );\n};\n\nexport default CPRTempoApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}