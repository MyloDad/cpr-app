{"ast":null,"code":"var _jsxFileName = \"/Users/davidhelmers/arrestpro/src/components/Buttons/PulseCheckButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { HeartPulse } from 'lucide-react';\nimport { useAppState } from '../../context/AppStateContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PulseCheckButton = () => {\n  _s();\n  const {\n    activeSection,\n    pulseCheckTime,\n    pauseTime,\n    pulseFlashing,\n    showChargeMonitor,\n    handlePulseCheckClick,\n    COLORS\n  } = useAppState();\n  const [progressWidth, setProgressWidth] = useState(0);\n  const TOTAL_PULSE_TIME = 105; // 1:45 in seconds\n\n  // Update progress width based on remaining time\n  useEffect(() => {\n    if (activeSection === 'pulse' || activeSection === 'pulse+metronome') {\n      if (pulseCheckTime > 10) {\n        // During the 1:45 period (before the 10s pause)\n        // Calculate progress percentage (from 0 to 100)\n        const timeElapsed = TOTAL_PULSE_TIME - (pulseCheckTime - 10);\n        const progressPercentage = timeElapsed / TOTAL_PULSE_TIME * 100;\n        setProgressWidth(progressPercentage);\n      } else {\n        // During the 10s pause, keep it at 100%\n        setProgressWidth(100);\n      }\n    } else {\n      // Reset when not active\n      setProgressWidth(0);\n    }\n  }, [activeSection, pulseCheckTime]);\n\n  // Common button styles\n  const buttonBaseStyle = {\n    border: 'none',\n    borderRadius: '8px',\n    padding: '12px',\n    cursor: 'pointer',\n    textAlign: 'left',\n    position: 'relative',\n    width: '100%',\n    height: '84px',\n    transition: 'all 0.2s ease',\n    boxShadow: '0 2px 4px rgba(0,0,0,0.2)',\n    overflow: 'hidden' // Important to contain the progress bar\n  };\n  const isActive = activeSection === 'pulse' || activeSection === 'pulse+metronome';\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handlePulseCheckClick,\n    style: {\n      ...buttonBaseStyle,\n      backgroundColor: showChargeMonitor ? COLORS.pulseBlue : COLORS.background,\n      color: isActive ? COLORS.white : COLORS.pulseBlue,\n      border: isActive ? 'none' : `1px solid ${COLORS.pulseBlue}`,\n      animation: pulseFlashing ? 'flashAlternate 1s infinite' : 'none'\n    },\n    children: [isActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        height: '100%',\n        width: `${progressWidth}%`,\n        backgroundColor: COLORS.pulseBlue,\n        transition: 'width 1s linear',\n        zIndex: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        height: '100%',\n        position: 'relative',\n        zIndex: 2 // Ensure content stays above the progress bar\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginRight: '15px',\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(HeartPulse, {\n          size: 42\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '18px',\n            fontWeight: 'bold',\n            marginBottom: '2px'\n          },\n          children: \"Pulse Check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '14px',\n            fontWeight: 'bold',\n            opacity: 0.9\n          },\n          children: \"2-min countdown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), isActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        right: '12px',\n        top: '50%',\n        transform: 'translateY(-50%)',\n        fontSize: '22px',\n        fontWeight: 'bold',\n        zIndex: 2 // Ensure timer stays above the progress bar\n      },\n      children: pulseCheckTime > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Math.floor(pulseCheckTime / 60) + \":\" + (pulseCheckTime % 60).toString().padStart(2, '0')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Math.floor(pauseTime / 60) + \":\" + (pauseTime % 60).toString().padStart(2, '0')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(PulseCheckButton, \"XGObpJFNt2vab5y62756csTXfmc=\", false, function () {\n  return [useAppState];\n});\n_c = PulseCheckButton;\nexport default PulseCheckButton;\nvar _c;\n$RefreshReg$(_c, \"PulseCheckButton\");","map":{"version":3,"names":["React","useEffect","useState","HeartPulse","useAppState","jsxDEV","_jsxDEV","PulseCheckButton","_s","activeSection","pulseCheckTime","pauseTime","pulseFlashing","showChargeMonitor","handlePulseCheckClick","COLORS","progressWidth","setProgressWidth","TOTAL_PULSE_TIME","timeElapsed","progressPercentage","buttonBaseStyle","border","borderRadius","padding","cursor","textAlign","position","width","height","transition","boxShadow","overflow","isActive","onClick","style","backgroundColor","pulseBlue","background","color","white","animation","children","top","left","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","display","alignItems","marginRight","size","fontSize","fontWeight","marginBottom","opacity","right","transform","Math","floor","toString","padStart","_c","$RefreshReg$"],"sources":["/Users/davidhelmers/arrestpro/src/components/Buttons/PulseCheckButton.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { HeartPulse } from 'lucide-react';\nimport { useAppState } from '../../context/AppStateContext';\n\nconst PulseCheckButton = () => {\n  const { \n    activeSection, \n    pulseCheckTime, \n    pauseTime,\n    pulseFlashing,\n    showChargeMonitor,\n    handlePulseCheckClick, \n    COLORS \n  } = useAppState();\n  \n  const [progressWidth, setProgressWidth] = useState(0);\n  const TOTAL_PULSE_TIME = 105; // 1:45 in seconds\n  \n  // Update progress width based on remaining time\n  useEffect(() => {\n    if (activeSection === 'pulse' || activeSection === 'pulse+metronome') {\n      if (pulseCheckTime > 10) { // During the 1:45 period (before the 10s pause)\n        // Calculate progress percentage (from 0 to 100)\n        const timeElapsed = TOTAL_PULSE_TIME - (pulseCheckTime - 10);\n        const progressPercentage = (timeElapsed / TOTAL_PULSE_TIME) * 100;\n        setProgressWidth(progressPercentage);\n      } else {\n        // During the 10s pause, keep it at 100%\n        setProgressWidth(100);\n      }\n    } else {\n      // Reset when not active\n      setProgressWidth(0);\n    }\n  }, [activeSection, pulseCheckTime]);\n\n  // Common button styles\n  const buttonBaseStyle = {\n    border: 'none',\n    borderRadius: '8px',\n    padding: '12px',\n    cursor: 'pointer',\n    textAlign: 'left',\n    position: 'relative',\n    width: '100%',\n    height: '84px',\n    transition: 'all 0.2s ease',\n    boxShadow: '0 2px 4px rgba(0,0,0,0.2)',\n    overflow: 'hidden', // Important to contain the progress bar\n  };\n  \n  const isActive = activeSection === 'pulse' || activeSection === 'pulse+metronome';\n\n  return (\n    <button\n      onClick={handlePulseCheckClick}\n      style={{\n        ...buttonBaseStyle,\n        backgroundColor: showChargeMonitor \n          ? COLORS.pulseBlue \n          : COLORS.background,\n        color: isActive \n          ? COLORS.white \n          : COLORS.pulseBlue,\n        border: isActive \n          ? 'none' \n          : `1px solid ${COLORS.pulseBlue}`,\n        animation: pulseFlashing ? 'flashAlternate 1s infinite' : 'none'\n      }}\n    >\n      {/* Progress bar */}\n      {isActive && (\n        <div \n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            height: '100%',\n            width: `${progressWidth}%`,\n            backgroundColor: COLORS.pulseBlue,\n            transition: 'width 1s linear',\n            zIndex: 1\n          }}\n        />\n      )}\n      \n      {/* Button content - positioned above the progress bar */}\n      <div style={{ \n        display: 'flex', \n        alignItems: 'center', \n        height: '100%',\n        position: 'relative',\n        zIndex: 2 // Ensure content stays above the progress bar\n      }}>\n        <div style={{ marginRight: '15px', display: 'flex', alignItems: 'center' }}>\n          <HeartPulse size={42} />\n        </div>\n        <div>\n          <div style={{ fontSize: '18px', fontWeight: 'bold', marginBottom: '2px' }}>\n            Pulse Check\n          </div>\n          <div style={{ fontSize: '14px', fontWeight: 'bold', opacity: 0.9 }}>\n            2-min countdown\n          </div>\n        </div>\n      </div>\n      \n      {isActive && (\n        <div style={{ \n          position: 'absolute',\n          right: '12px',\n          top: '50%',\n          transform: 'translateY(-50%)',\n          fontSize: '22px',\n          fontWeight: 'bold',\n          zIndex: 2 // Ensure timer stays above the progress bar\n        }}>\n          {pulseCheckTime > 0 ? (\n            <div>{Math.floor(pulseCheckTime / 60) + \":\" + (pulseCheckTime % 60).toString().padStart(2, '0')}</div>\n          ) : (\n            <div>{Math.floor(pauseTime / 60) + \":\" + (pauseTime % 60).toString().padStart(2, '0')}</div>\n          )}\n        </div>\n      )}\n    </button>\n  );\n};\n\nexport default PulseCheckButton;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}