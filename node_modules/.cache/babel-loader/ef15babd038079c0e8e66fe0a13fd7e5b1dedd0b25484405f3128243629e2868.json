{"ast":null,"code":"var _jsxFileName = \"/Users/davidhelmers/arrestpro/src/CPRTempoApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { HeartPulse, Clock, Syringe, Wind } from 'lucide-react';\nimport styles from './CPRTempoApp.module.css';\n\n// Create a simplified version that will definitely compile\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CPRTempoApp = () => {\n  _s();\n  // State variables\n  const [activeSection, setActiveSection] = useState(null);\n  const [seconds, setSeconds] = useState(0);\n  const [pulseCheckTime, setPulseCheckTime] = useState(120); // 2 minutes countdown\n  const [pauseTime, setPauseTime] = useState(10); // 10 second pause countdown\n  const [metronomeRunning, setMetronomeRunning] = useState(false);\n  const [ventilationActive, setVentilationActive] = useState(false);\n  const [ventilationRate, setVentilationRate] = useState(11); // Default ventilation rate\n  const [showChargeMonitor, setShowChargeMonitor] = useState(false);\n  const [epiActive, setEpiActive] = useState(false);\n  const [epiTime, setEpiTime] = useState(300); // 5 minutes countdown\n  const [epiCycles, setEpiCycles] = useState(0); // Counter for epinephrine cycles\n  const [clockStarted, setClockStarted] = useState(false);\n  const [startTime, setStartTime] = useState(null); // Track when the metronome was started\n  const [countdownAnnounced, setCountdownAnnounced] = useState({\n    5: false,\n    4: false,\n    3: false,\n    2: false,\n    1: false\n  }); // Track announced numbers\n\n  // Refs for safer interval handling\n  const audioContextRef = useRef(null);\n  const timerIntervalRef = useRef(null);\n  const pulseIntervalRef = useRef(null);\n  const ventilationIntervalRef = useRef(null);\n  const epiIntervalRef = useRef(null);\n  const clockIntervalRef = useRef(null);\n\n  // Play speech synthesis\n  const playSpeech = useCallback(text => {\n    if ('speechSynthesis' in window) {\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.rate = 1.0;\n      utterance.volume = 1.0;\n      window.speechSynthesis.speak(utterance);\n    }\n  }, []);\n\n  // Create audio context\n  const createAudioContext = useCallback(() => {\n    if (!audioContextRef.current) {\n      try {\n        audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      } catch (e) {\n        console.error(\"Failed to create audio context:\", e);\n      }\n    }\n    return audioContextRef.current;\n  }, []);\n\n  // Get audio context\n  const getAudioContext = useCallback(() => {\n    return audioContextRef.current;\n  }, []);\n\n  // Start the main clock\n  const startClock = useCallback(() => {\n    if (clockIntervalRef.current) {\n      clearInterval(clockIntervalRef.current);\n    }\n    const interval = setInterval(() => {\n      setSeconds(prev => prev + 1);\n    }, 1000);\n    clockIntervalRef.current = interval;\n    setClockStarted(true);\n  }, []);\n\n  // Reset the main clock\n  const resetClock = useCallback(() => {\n    setSeconds(0);\n    if (!clockStarted && (activeSection || ventilationActive || epiActive)) {\n      startClock();\n    } else if (!activeSection && !ventilationActive && !epiActive) {\n      if (clockIntervalRef.current) {\n        clearInterval(clockIntervalRef.current);\n        clockIntervalRef.current = null;\n      }\n      setClockStarted(false);\n    }\n  }, [clockStarted, startClock, activeSection, ventilationActive, epiActive]);\n\n  // Toggle ventilation\n  const toggleVentilation = useCallback(() => {\n    setVentilationActive(prev => !prev);\n  }, []);\n\n  // Play metronome click\n  const playMetronomeClick = useCallback(() => {\n    try {\n      const ctx = getAudioContext() || createAudioContext();\n      if (!ctx) return;\n      if (ctx.state === 'suspended') {\n        ctx.resume();\n      }\n      const oscillator = ctx.createOscillator();\n      oscillator.type = 'sine';\n      oscillator.frequency.value = 800;\n      oscillator.connect(ctx.destination);\n      oscillator.start();\n      oscillator.stop(ctx.currentTime + 0.05);\n    } catch (e) {\n      console.error(\"Error playing sound:\", e);\n    }\n  }, [getAudioContext, createAudioContext]);\n\n  // Play ventilate sound\n  const playVentilateSound = useCallback(() => {\n    playSpeech(\"ventilate\");\n  }, [playSpeech]);\n\n  // Handle Metronome button click\n  const handleMetronomeClick = useCallback(() => {\n    createAudioContext();\n    if (!clockStarted) {\n      startClock();\n    }\n    if (activeSection === 'metronome' || activeSection === 'pulse+metronome') {\n      if (activeSection === 'pulse+metronome') {\n        setActiveSection('pulse');\n      } else {\n        setActiveSection(null);\n      }\n    } else {\n      if (activeSection === 'pulse') {\n        setActiveSection('pulse+metronome');\n      } else {\n        setActiveSection('metronome');\n        setStartTime(new Date());\n      }\n    }\n  }, [activeSection, createAudioContext, clockStarted, startClock]);\n\n  // Handle Pulse check button click\n  const handlePulseCheckClick = useCallback(() => {\n    if (activeSection === 'pulse' || activeSection === 'pulse+metronome') {\n      if (activeSection === 'pulse+metronome') {\n        setActiveSection('metronome');\n      } else {\n        setActiveSection(null);\n      }\n      if (pulseIntervalRef.current) {\n        clearInterval(pulseIntervalRef.current);\n        pulseIntervalRef.current = null;\n      }\n    } else {\n      if (activeSection === 'metronome') {\n        setActiveSection('pulse+metronome');\n      } else {\n        setActiveSection('pulse');\n      }\n      setPulseCheckTime(120);\n      setPauseTime(10);\n      setShowChargeMonitor(false);\n      pulseIntervalRef.current = setInterval(() => {\n        setPulseCheckTime(prevTime => {\n          // Show charge monitor warning at 15 seconds\n          if (prevTime === 15) {\n            setShowChargeMonitor(true);\n            playSpeech(\"Charge monitor\");\n          }\n\n          // Countdown for last 5 seconds\n          if (prevTime <= 5 && prevTime > 0) {\n            playSpeech(prevTime.toString());\n            if (prevTime === 1) {\n              setTimeout(() => playSpeech(\"Stop compression\"), 1000);\n            }\n          }\n\n          // Handle timeout\n          if (prevTime === 0) {\n            setPauseTime(pauseTime => {\n              if (pauseTime <= 1) {\n                setPulseCheckTime(120);\n                setShowChargeMonitor(false);\n                return 10;\n              }\n              return pauseTime - 1;\n            });\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n    }\n  }, [activeSection, playSpeech]);\n\n  // Handle Epinephrine button click\n  const handleEpinephrineClick = useCallback(() => {\n    setEpiActive(prev => {\n      if (prev) {\n        setEpiTime(300);\n      }\n      return !prev;\n    });\n  }, []);\n\n  // Update metronome state based on activeSection\n  useEffect(() => {\n    if (activeSection === 'metronome' || activeSection === 'pulse+metronome') {\n      setMetronomeRunning(true);\n    } else {\n      setMetronomeRunning(false);\n      if (!(activeSection === 'metronome' || activeSection === 'pulse+metronome')) {\n        setStartTime(null);\n      }\n    }\n    if (!activeSection && !ventilationActive && !epiActive && clockStarted) {\n      if (clockIntervalRef.current) {\n        clearInterval(clockIntervalRef.current);\n        clockIntervalRef.current = null;\n      }\n      setSeconds(0);\n      setClockStarted(false);\n    }\n  }, [activeSection, ventilationActive, epiActive, clockStarted]);\n\n  // Metronome timer effect\n  useEffect(() => {\n    if (!metronomeRunning) return;\n    if (timerIntervalRef.current) {\n      clearInterval(timerIntervalRef.current);\n      timerIntervalRef.current = null;\n    }\n    const bpm = 110; // Fixed BPM\n    if (bpm <= 0) return;\n    const intervalTime = 60 / bpm * 1000;\n    timerIntervalRef.current = setInterval(playMetronomeClick, intervalTime);\n    playMetronomeClick();\n    return () => {\n      if (timerIntervalRef.current) {\n        clearInterval(timerIntervalRef.current);\n        timerIntervalRef.current = null;\n      }\n    };\n  }, [metronomeRunning, playMetronomeClick]);\n\n  // Ventilation timer effect\n  useEffect(() => {\n    if (!ventilationActive) return;\n    if (ventilationIntervalRef.current) {\n      clearInterval(ventilationIntervalRef.current);\n      ventilationIntervalRef.current = null;\n    }\n    if (ventilationRate <= 0) return;\n    const intervalTime = 60 / ventilationRate * 1000;\n    ventilationIntervalRef.current = setInterval(playVentilateSound, intervalTime);\n    playVentilateSound();\n    return () => {\n      if (ventilationIntervalRef.current) {\n        clearInterval(ventilationIntervalRef.current);\n        ventilationIntervalRef.current = null;\n      }\n    };\n  }, [ventilationActive, ventilationRate, playVentilateSound]);\n\n  // Epinephrine timer effect\n  useEffect(() => {\n    if (!epiActive) {\n      if (epiIntervalRef.current) {\n        clearInterval(epiIntervalRef.current);\n        epiIntervalRef.current = null;\n      }\n      return;\n    }\n    epiIntervalRef.current = setInterval(() => {\n      setEpiTime(prevTime => {\n        if (prevTime <= 0) {\n          // Increment the cycle counter when a full cycle completes\n          setEpiCycles(prev => prev + 1);\n          setEpiTime(300);\n          return 300;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n    return () => {\n      if (epiIntervalRef.current) {\n        clearInterval(epiIntervalRef.current);\n        epiIntervalRef.current = null;\n      }\n    };\n  }, [epiActive]);\n\n  // Update current time every second\n  useEffect(() => {\n    const timeUpdateInterval = setInterval(() => {\n      // Just for updating \"now\" clock display\n      if (clockStarted) {\n        setSeconds(prev => prev);\n      }\n    }, 1000);\n    return () => clearInterval(timeUpdateInterval);\n  }, [clockStarted]);\n\n  // Cleanup all intervals on unmount\n  useEffect(() => {\n    return () => {\n      if (audioContextRef.current) {\n        audioContextRef.current.close();\n      }\n      [timerIntervalRef, pulseIntervalRef, ventilationIntervalRef, epiIntervalRef, clockIntervalRef].forEach(ref => {\n        if (ref && ref.current) {\n          clearInterval(ref.current);\n          ref.current = null;\n        }\n      });\n    };\n  }, []);\n\n  // Format seconds to MM:SS\n  const formatTime = totalSeconds => {\n    const minutes = Math.floor(totalSeconds / 60);\n    const seconds = totalSeconds % 60;\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  // Format time as 24-hour clock HH:MM\n  const formatClock = date => {\n    if (!date) return \"--:--\";\n    const hours = date.getHours().toString().padStart(2, '0');\n    const minutes = date.getMinutes().toString().padStart(2, '0');\n    return `${hours}:${minutes}`;\n  };\n\n  // Render the UI\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: styles.header,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.title,\n        children: \"ArrestPro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.appContainer,\n      style: {\n        maxHeight: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        padding: '5px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.timerDisplay,\n        onClick: resetClock,\n        title: \"Click to reset timer\",\n        style: {\n          padding: '5px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.timerText,\n          children: formatTime(seconds)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '2px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontWeight: 'bold',\n                  fontSize: '0.8rem',\n                  color: 'white'\n                },\n                children: \"Start: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontSize: '0.9rem',\n                  fontFamily: 'monospace',\n                  color: 'white'\n                },\n                children: formatClock(startTime)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontWeight: 'bold',\n                  fontSize: '0.8rem',\n                  color: 'white'\n                },\n                children: \"Now: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontSize: '0.9rem',\n                  fontFamily: 'monospace',\n                  color: 'white'\n                },\n                children: formatClock(new Date())\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: '1fr 1fr',\n          gridTemplateRows: 'auto auto',\n          gridTemplateAreas: `\"metronome pulse\"\n                              \"ventilation epi\"`,\n          gap: '10px',\n          marginTop: '5px',\n          marginBottom: '5px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleMetronomeClick,\n          style: {\n            gridArea: 'metronome',\n            backgroundColor: activeSection === 'metronome' || activeSection === 'pulse+metronome' ? '#c0392b' : '#e74c3c',\n            color: 'white',\n            border: 'none',\n            borderRadius: '8px',\n            padding: '15px',\n            cursor: 'pointer',\n            textAlign: 'left',\n            position: 'relative'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Clock, {\n              size: 24,\n              style: {\n                marginRight: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '1.1rem',\n                  fontWeight: 'bold',\n                  marginBottom: '4px'\n                },\n                children: \"Metronome\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '0.8rem',\n                  opacity: 0.8,\n                  fontWeight: 'bold'\n                },\n                children: \"110 beats/min\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleVentilation,\n          style: {\n            gridArea: 'ventilation',\n            backgroundColor: ventilationActive ? '#27ae60' : '#2ecc71',\n            color: 'white',\n            border: 'none',\n            borderRadius: '8px',\n            padding: '15px',\n            cursor: 'pointer',\n            textAlign: 'left',\n            position: 'relative'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Wind, {\n              size: 24,\n              style: {\n                marginRight: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '1.1rem',\n                  fontWeight: 'bold',\n                  marginBottom: '4px'\n                },\n                children: \"Ventilation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '0.8rem',\n                  opacity: 0.8,\n                  fontWeight: 'bold'\n                },\n                children: [ventilationRate, \" breaths/min\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePulseCheckClick,\n          style: {\n            gridArea: 'pulse',\n            backgroundColor: showChargeMonitor ? '#1abc9c' : activeSection === 'pulse' || activeSection === 'pulse+metronome' ? '#2980b9' : '#3498db',\n            color: 'white',\n            border: 'none',\n            borderRadius: '8px',\n            padding: '15px',\n            cursor: 'pointer',\n            textAlign: 'left',\n            position: 'relative',\n            animation: showChargeMonitor ? 'pulse 1s infinite' : 'none'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(HeartPulse, {\n              size: 24,\n              style: {\n                marginRight: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '1.1rem',\n                  fontWeight: 'bold',\n                  marginBottom: '4px'\n                },\n                children: \"Pulse Check\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '0.8rem',\n                  opacity: 0.8,\n                  fontWeight: 'bold'\n                },\n                children: \"2-min countdown\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this), (activeSection === 'pulse' || activeSection === 'pulse+metronome') && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              right: '10px',\n              top: '50%',\n              transform: 'translateY(-50%)',\n              fontSize: '1.2rem',\n              fontWeight: 'bold'\n            },\n            children: pulseCheckTime > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: Math.floor(pulseCheckTime / 60) + \":\" + (pulseCheckTime % 60).toString().padStart(2, '0')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: Math.floor(pauseTime / 60) + \":\" + (pauseTime % 60).toString().padStart(2, '0')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEpinephrineClick,\n          style: {\n            gridArea: 'epi',\n            backgroundColor: epiActive ? '#f39c12' : '#f1c40f',\n            color: 'white',\n            border: 'none',\n            borderRadius: '8px',\n            padding: '15px',\n            cursor: 'pointer',\n            textAlign: 'left',\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Syringe, {\n              size: 24,\n              style: {\n                marginRight: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '1.1rem',\n                  fontWeight: 'bold',\n                  marginBottom: '4px'\n                },\n                children: \"Epinephrine\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '0.8rem',\n                  opacity: 0.8,\n                  fontWeight: 'bold'\n                },\n                children: \"5-min countdown\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 17\n              }, this), epiActive && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '0.8rem',\n                  opacity: 0.8,\n                  fontWeight: 'bold'\n                },\n                children: [\"Cycles: \", epiCycles]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this), epiActive && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              right: '10px',\n              top: '50%',\n              transform: 'translateY(-50%)',\n              fontSize: '1.2rem',\n              fontWeight: 'bold'\n            },\n            children: [Math.floor(epiTime / 60), \":\", (epiTime % 60).toString().padStart(2, '0')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this), ventilationActive && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#ecf0f1',\n          padding: '5px',\n          borderRadius: '8px',\n          marginBottom: '5px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '2px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontWeight: 'bold'\n            },\n            children: [\"Ventilation: \", ventilationRate, \" breaths/min\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"5\",\n          max: \"20\",\n          value: ventilationRate,\n          onChange: e => setVentilationRate(parseInt(e.target.value)),\n          style: {\n            width: '100%',\n            height: '20px',\n            accentColor: '#2ecc71'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            fontSize: '0.8rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"15\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"20\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      dangerouslySetInnerHTML: {\n        __html: `\n          @keyframes pulse {\n            0% { background-color: #3498db; }\n            50% { background-color: #2980b9; }\n            100% { background-color: #3498db; }\n          }\n        `\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 355,\n    columnNumber: 5\n  }, this);\n};\n_s(CPRTempoApp, \"tl8hzwgmA3OAyzcAsems2dyarpg=\");\n_c = CPRTempoApp;\nexport default CPRTempoApp;\nvar _c;\n$RefreshReg$(_c, \"CPRTempoApp\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","HeartPulse","Clock","Syringe","Wind","styles","jsxDEV","_jsxDEV","CPRTempoApp","_s","activeSection","setActiveSection","seconds","setSeconds","pulseCheckTime","setPulseCheckTime","pauseTime","setPauseTime","metronomeRunning","setMetronomeRunning","ventilationActive","setVentilationActive","ventilationRate","setVentilationRate","showChargeMonitor","setShowChargeMonitor","epiActive","setEpiActive","epiTime","setEpiTime","epiCycles","setEpiCycles","clockStarted","setClockStarted","startTime","setStartTime","countdownAnnounced","setCountdownAnnounced","audioContextRef","timerIntervalRef","pulseIntervalRef","ventilationIntervalRef","epiIntervalRef","clockIntervalRef","playSpeech","text","window","utterance","SpeechSynthesisUtterance","rate","volume","speechSynthesis","speak","createAudioContext","current","AudioContext","webkitAudioContext","e","console","error","getAudioContext","startClock","clearInterval","interval","setInterval","prev","resetClock","toggleVentilation","playMetronomeClick","ctx","state","resume","oscillator","createOscillator","type","frequency","value","connect","destination","start","stop","currentTime","playVentilateSound","handleMetronomeClick","Date","handlePulseCheckClick","prevTime","toString","setTimeout","handleEpinephrineClick","bpm","intervalTime","timeUpdateInterval","close","forEach","ref","formatTime","totalSeconds","minutes","Math","floor","padStart","formatClock","date","hours","getHours","getMinutes","className","container","children","header","title","fileName","_jsxFileName","lineNumber","columnNumber","appContainer","style","maxHeight","display","flexDirection","padding","timerDisplay","onClick","timerText","marginTop","justifyContent","width","fontWeight","fontSize","color","fontFamily","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","gap","marginBottom","gridArea","backgroundColor","border","borderRadius","cursor","textAlign","position","alignItems","size","marginRight","opacity","animation","right","top","transform","min","max","onChange","parseInt","target","height","accentColor","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["/Users/davidhelmers/arrestpro/src/CPRTempoApp.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { HeartPulse, Clock, Syringe, Wind } from 'lucide-react';\nimport styles from './CPRTempoApp.module.css';\n\n// Create a simplified version that will definitely compile\nconst CPRTempoApp = () => {\n  // State variables\n  const [activeSection, setActiveSection] = useState(null);\n  const [seconds, setSeconds] = useState(0);\n  const [pulseCheckTime, setPulseCheckTime] = useState(120); // 2 minutes countdown\n  const [pauseTime, setPauseTime] = useState(10); // 10 second pause countdown\n  const [metronomeRunning, setMetronomeRunning] = useState(false);\n  const [ventilationActive, setVentilationActive] = useState(false);\n  const [ventilationRate, setVentilationRate] = useState(11); // Default ventilation rate\n  const [showChargeMonitor, setShowChargeMonitor] = useState(false);\n  const [epiActive, setEpiActive] = useState(false);\n  const [epiTime, setEpiTime] = useState(300); // 5 minutes countdown\n  const [epiCycles, setEpiCycles] = useState(0); // Counter for epinephrine cycles\n  const [clockStarted, setClockStarted] = useState(false);\n  const [startTime, setStartTime] = useState(null); // Track when the metronome was started\n  const [countdownAnnounced, setCountdownAnnounced] = useState({5: false, 4: false, 3: false, 2: false, 1: false}); // Track announced numbers\n\n  // Refs for safer interval handling\n  const audioContextRef = useRef(null);\n  const timerIntervalRef = useRef(null);\n  const pulseIntervalRef = useRef(null);\n  const ventilationIntervalRef = useRef(null);\n  const epiIntervalRef = useRef(null);\n  const clockIntervalRef = useRef(null);\n\n  // Play speech synthesis\n  const playSpeech = useCallback((text) => {\n    if ('speechSynthesis' in window) {\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.rate = 1.0;\n      utterance.volume = 1.0;\n      window.speechSynthesis.speak(utterance);\n    }\n  }, []);\n\n  // Create audio context\n  const createAudioContext = useCallback(() => {\n    if (!audioContextRef.current) {\n      try {\n        audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      } catch (e) {\n        console.error(\"Failed to create audio context:\", e);\n      }\n    }\n    return audioContextRef.current;\n  }, []);\n\n  // Get audio context\n  const getAudioContext = useCallback(() => {\n    return audioContextRef.current;\n  }, []);\n\n  // Start the main clock\n  const startClock = useCallback(() => {\n    if (clockIntervalRef.current) {\n      clearInterval(clockIntervalRef.current);\n    }\n    \n    const interval = setInterval(() => {\n      setSeconds(prev => prev + 1);\n    }, 1000);\n    \n    clockIntervalRef.current = interval;\n    setClockStarted(true);\n  }, []);\n\n  // Reset the main clock\n  const resetClock = useCallback(() => {\n    setSeconds(0);\n    if (!clockStarted && (activeSection || ventilationActive || epiActive)) {\n      startClock();\n    } else if (!activeSection && !ventilationActive && !epiActive) {\n      if (clockIntervalRef.current) {\n        clearInterval(clockIntervalRef.current);\n        clockIntervalRef.current = null;\n      }\n      setClockStarted(false);\n    }\n  }, [clockStarted, startClock, activeSection, ventilationActive, epiActive]);\n\n  // Toggle ventilation\n  const toggleVentilation = useCallback(() => {\n    setVentilationActive(prev => !prev);\n  }, []);\n\n  // Play metronome click\n  const playMetronomeClick = useCallback(() => {\n    try {\n      const ctx = getAudioContext() || createAudioContext();\n      if (!ctx) return;\n      \n      if (ctx.state === 'suspended') {\n        ctx.resume();\n      }\n      \n      const oscillator = ctx.createOscillator();\n      oscillator.type = 'sine';\n      oscillator.frequency.value = 800;\n      oscillator.connect(ctx.destination);\n      oscillator.start();\n      oscillator.stop(ctx.currentTime + 0.05);\n    } catch (e) {\n      console.error(\"Error playing sound:\", e);\n    }\n  }, [getAudioContext, createAudioContext]);\n\n  // Play ventilate sound\n  const playVentilateSound = useCallback(() => {\n    playSpeech(\"ventilate\");\n  }, [playSpeech]);\n\n  // Handle Metronome button click\n  const handleMetronomeClick = useCallback(() => {\n    createAudioContext();\n    \n    if (!clockStarted) {\n      startClock();\n    }\n    \n    if (activeSection === 'metronome' || activeSection === 'pulse+metronome') {\n      if (activeSection === 'pulse+metronome') {\n        setActiveSection('pulse');\n      } else {\n        setActiveSection(null);\n      }\n    } else {\n      if (activeSection === 'pulse') {\n        setActiveSection('pulse+metronome');\n      } else {\n        setActiveSection('metronome');\n        setStartTime(new Date());\n      }\n    }\n  }, [activeSection, createAudioContext, clockStarted, startClock]);\n\n  // Handle Pulse check button click\n  const handlePulseCheckClick = useCallback(() => {\n    if (activeSection === 'pulse' || activeSection === 'pulse+metronome') {\n      if (activeSection === 'pulse+metronome') {\n        setActiveSection('metronome');\n      } else {\n        setActiveSection(null);\n      }\n      \n      if (pulseIntervalRef.current) {\n        clearInterval(pulseIntervalRef.current);\n        pulseIntervalRef.current = null;\n      }\n    } else {\n      if (activeSection === 'metronome') {\n        setActiveSection('pulse+metronome');\n      } else {\n        setActiveSection('pulse');\n      }\n      \n      setPulseCheckTime(120);\n      setPauseTime(10);\n      setShowChargeMonitor(false);\n      \n      pulseIntervalRef.current = setInterval(() => {\n        setPulseCheckTime(prevTime => {\n          // Show charge monitor warning at 15 seconds\n          if (prevTime === 15) {\n            setShowChargeMonitor(true);\n            playSpeech(\"Charge monitor\");\n          }\n          \n          // Countdown for last 5 seconds\n          if (prevTime <= 5 && prevTime > 0) {\n            playSpeech(prevTime.toString());\n            if (prevTime === 1) {\n              setTimeout(() => playSpeech(\"Stop compression\"), 1000);\n            }\n          }\n          \n          // Handle timeout\n          if (prevTime === 0) {\n            setPauseTime(pauseTime => {\n              if (pauseTime <= 1) {\n                setPulseCheckTime(120);\n                setShowChargeMonitor(false);\n                return 10;\n              }\n              return pauseTime - 1;\n            });\n            return 0;\n          }\n          \n          return prevTime - 1;\n        });\n      }, 1000);\n    }\n  }, [activeSection, playSpeech]);\n\n  // Handle Epinephrine button click\n  const handleEpinephrineClick = useCallback(() => {\n    setEpiActive(prev => {\n      if (prev) {\n        setEpiTime(300);\n      }\n      return !prev;\n    });\n  }, []);\n\n  // Update metronome state based on activeSection\n  useEffect(() => {\n    if (activeSection === 'metronome' || activeSection === 'pulse+metronome') {\n      setMetronomeRunning(true);\n    } else {\n      setMetronomeRunning(false);\n      if (!(activeSection === 'metronome' || activeSection === 'pulse+metronome')) {\n        setStartTime(null);\n      }\n    }\n    \n    if (!activeSection && !ventilationActive && !epiActive && clockStarted) {\n      if (clockIntervalRef.current) {\n        clearInterval(clockIntervalRef.current);\n        clockIntervalRef.current = null;\n      }\n      setSeconds(0);\n      setClockStarted(false);\n    }\n  }, [activeSection, ventilationActive, epiActive, clockStarted]);\n\n  // Metronome timer effect\n  useEffect(() => {\n    if (!metronomeRunning) return;\n    \n    if (timerIntervalRef.current) {\n      clearInterval(timerIntervalRef.current);\n      timerIntervalRef.current = null;\n    }\n    \n    const bpm = 110; // Fixed BPM\n    if (bpm <= 0) return;\n    \n    const intervalTime = (60 / bpm) * 1000;\n    timerIntervalRef.current = setInterval(playMetronomeClick, intervalTime);\n    \n    playMetronomeClick();\n    \n    return () => {\n      if (timerIntervalRef.current) {\n        clearInterval(timerIntervalRef.current);\n        timerIntervalRef.current = null;\n      }\n    };\n  }, [metronomeRunning, playMetronomeClick]);\n\n  // Ventilation timer effect\n  useEffect(() => {\n    if (!ventilationActive) return;\n    \n    if (ventilationIntervalRef.current) {\n      clearInterval(ventilationIntervalRef.current);\n      ventilationIntervalRef.current = null;\n    }\n    \n    if (ventilationRate <= 0) return;\n    \n    const intervalTime = (60 / ventilationRate) * 1000;\n    ventilationIntervalRef.current = setInterval(playVentilateSound, intervalTime);\n    \n    playVentilateSound();\n    \n    return () => {\n      if (ventilationIntervalRef.current) {\n        clearInterval(ventilationIntervalRef.current);\n        ventilationIntervalRef.current = null;\n      }\n    };\n  }, [ventilationActive, ventilationRate, playVentilateSound]);\n\n  // Epinephrine timer effect\n  useEffect(() => {\n    if (!epiActive) {\n      if (epiIntervalRef.current) {\n        clearInterval(epiIntervalRef.current);\n        epiIntervalRef.current = null;\n      }\n      return;\n    }\n    \n    epiIntervalRef.current = setInterval(() => {\n      setEpiTime(prevTime => {\n        if (prevTime <= 0) {\n          // Increment the cycle counter when a full cycle completes\n          setEpiCycles(prev => prev + 1);\n          setEpiTime(300);\n          return 300;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n    \n    return () => {\n      if (epiIntervalRef.current) {\n        clearInterval(epiIntervalRef.current);\n        epiIntervalRef.current = null;\n      }\n    };\n  }, [epiActive]);\n\n  // Update current time every second\n  useEffect(() => {\n    const timeUpdateInterval = setInterval(() => {\n      // Just for updating \"now\" clock display\n      if (clockStarted) {\n        setSeconds(prev => prev);\n      }\n    }, 1000);\n    \n    return () => clearInterval(timeUpdateInterval);\n  }, [clockStarted]);\n\n  // Cleanup all intervals on unmount\n  useEffect(() => {\n    return () => {\n      if (audioContextRef.current) {\n        audioContextRef.current.close();\n      }\n      \n      [timerIntervalRef, pulseIntervalRef, ventilationIntervalRef, epiIntervalRef, clockIntervalRef].forEach(ref => {\n        if (ref && ref.current) {\n          clearInterval(ref.current);\n          ref.current = null;\n        }\n      });\n    };\n  }, []);\n\n  // Format seconds to MM:SS\n  const formatTime = (totalSeconds) => {\n    const minutes = Math.floor(totalSeconds / 60);\n    const seconds = totalSeconds % 60;\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n  \n  // Format time as 24-hour clock HH:MM\n  const formatClock = (date) => {\n    if (!date) return \"--:--\";\n    const hours = date.getHours().toString().padStart(2, '0');\n    const minutes = date.getMinutes().toString().padStart(2, '0');\n    return `${hours}:${minutes}`;\n  };\n\n  // Render the UI\n  return (\n    <div className={styles.container}>\n      <header className={styles.header}>\n        <h1 className={styles.title}>ArrestPro</h1>\n      </header>\n\n      <div className={styles.appContainer} style={{ maxHeight: '100vh', display: 'flex', flexDirection: 'column', padding: '5px' }}>\n        {/* Timer Display with click to reset */}\n        <div\n          className={styles.timerDisplay}\n          onClick={resetClock}\n          title=\"Click to reset timer\"\n          style={{ padding: '5px' }}\n        >\n          <div className={styles.timerText}>\n            {formatTime(seconds)}\n          </div>\n          <div style={{ marginTop: '2px' }}>\n            <div style={{ display: 'flex', justifyContent: 'space-between', width: '100%' }}>\n              <div>\n                <span style={{ fontWeight: 'bold', fontSize: '0.8rem', color: 'white' }}>Start: </span>\n                <span style={{ fontSize: '0.9rem', fontFamily: 'monospace', color: 'white' }}>{formatClock(startTime)}</span>\n              </div>\n              <div>\n                <span style={{ fontWeight: 'bold', fontSize: '0.8rem', color: 'white' }}>Now: </span>\n                <span style={{ fontSize: '0.9rem', fontFamily: 'monospace', color: 'white' }}>{formatClock(new Date())}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Main Buttons */}\n        <div style={{ \n          display: 'grid', \n          gridTemplateColumns: '1fr 1fr', \n          gridTemplateRows: 'auto auto',\n          gridTemplateAreas: `\"metronome pulse\"\n                              \"ventilation epi\"`,\n          gap: '10px', \n          marginTop: '5px', \n          marginBottom: '5px' \n        }}>\n          {/* Metronome Button - Changed to red */}\n          <button\n            onClick={handleMetronomeClick}\n            style={{\n              gridArea: 'metronome',\n              backgroundColor: (activeSection === 'metronome' || activeSection === 'pulse+metronome') ? '#c0392b' : '#e74c3c',\n              color: 'white',\n              border: 'none',\n              borderRadius: '8px',\n              padding: '15px',\n              cursor: 'pointer',\n              textAlign: 'left',\n              position: 'relative'\n            }}\n          >\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n              <Clock size={24} style={{ marginRight: '10px' }} />\n              <div>\n                <div style={{ fontSize: '1.1rem', fontWeight: 'bold', marginBottom: '4px' }}>Metronome</div>\n                <div style={{ fontSize: '0.8rem', opacity: 0.8, fontWeight: 'bold' }}>110 beats/min</div>\n              </div>\n            </div>\n          </button>\n         \n          {/* Ventilation Button - Moved to lower left */}\n          <button\n            onClick={toggleVentilation}\n            style={{\n              gridArea: 'ventilation',\n              backgroundColor: ventilationActive ? '#27ae60' : '#2ecc71',\n              color: 'white',\n              border: 'none',\n              borderRadius: '8px',\n              padding: '15px',\n              cursor: 'pointer',\n              textAlign: 'left',\n              position: 'relative'\n            }}\n          >\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n              <Wind size={24} style={{ marginRight: '10px' }} />\n              <div>\n                <div style={{ fontSize: '1.1rem', fontWeight: 'bold', marginBottom: '4px' }}>Ventilation</div>\n                <div style={{ fontSize: '0.8rem', opacity: 0.8, fontWeight: 'bold' }}>{ventilationRate} breaths/min</div>\n              </div>\n            </div>\n          </button>\n         \n          {/* Pulse Check Button - Moved to upper right and changed to blue */}\n          <button\n            onClick={handlePulseCheckClick}\n            style={{\n              gridArea: 'pulse',\n              backgroundColor: showChargeMonitor ? '#1abc9c' : (activeSection === 'pulse' || activeSection === 'pulse+metronome') ? '#2980b9' : '#3498db',\n              color: 'white',\n              border: 'none',\n              borderRadius: '8px',\n              padding: '15px',\n              cursor: 'pointer',\n              textAlign: 'left',\n              position: 'relative',\n              animation: showChargeMonitor ? 'pulse 1s infinite' : 'none'\n            }}\n          >\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n              <HeartPulse size={24} style={{ marginRight: '10px' }} />\n              <div>\n                <div style={{ fontSize: '1.1rem', fontWeight: 'bold', marginBottom: '4px' }}>Pulse Check</div>\n                <div style={{ fontSize: '0.8rem', opacity: 0.8, fontWeight: 'bold' }}>2-min countdown</div>\n              </div>\n            </div>\n            {(activeSection === 'pulse' || activeSection === 'pulse+metronome') && (\n              <div style={{ \n                position: 'absolute',\n                right: '10px',\n                top: '50%',\n                transform: 'translateY(-50%)',\n                fontSize: '1.2rem',\n                fontWeight: 'bold'\n              }}>\n                {pulseCheckTime > 0 ? (\n                  <div>{Math.floor(pulseCheckTime / 60) + \":\" + (pulseCheckTime % 60).toString().padStart(2, '0')}</div>\n                ) : (\n                  <div>{Math.floor(pauseTime / 60) + \":\" + (pauseTime % 60).toString().padStart(2, '0')}</div>\n                )}\n              </div>\n            )}\n          </button>\n         \n          {/* Epinephrine Button - Changed to yellow */}\n          <button\n            onClick={handleEpinephrineClick}\n            style={{\n              gridArea: 'epi',\n              backgroundColor: epiActive ? '#f39c12' : '#f1c40f',\n              color: 'white',\n              border: 'none',\n              borderRadius: '8px',\n              padding: '15px',\n              cursor: 'pointer',\n              textAlign: 'left',\n              position: 'relative'\n            }}\n          >\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n              <Syringe size={24} style={{ marginRight: '10px' }} />\n              <div>\n                <div style={{ fontSize: '1.1rem', fontWeight: 'bold', marginBottom: '4px' }}>Epinephrine</div>\n                <div style={{ fontSize: '0.8rem', opacity: 0.8, fontWeight: 'bold' }}>5-min countdown</div>\n                {epiActive && <div style={{ fontSize: '0.8rem', opacity: 0.8, fontWeight: 'bold' }}>Cycles: {epiCycles}</div>}\n              </div>\n            </div>\n            {epiActive && (\n              <div style={{ \n                position: 'absolute',\n                right: '10px',\n                top: '50%',\n                transform: 'translateY(-50%)',\n                fontSize: '1.2rem',\n                fontWeight: 'bold'\n              }}>\n                {Math.floor(epiTime / 60)}:{(epiTime % 60).toString().padStart(2, '0')}\n              </div>\n            )}\n          </button>\n        </div>\n\n        {/* Ventilation Rate Control - compact slider */}\n        {ventilationActive && (\n          <div style={{ \n            backgroundColor: '#ecf0f1',\n            padding: '5px',\n            borderRadius: '8px',\n            marginBottom: '5px' \n          }}>\n            <div style={{ marginBottom: '2px' }}>\n              <span style={{ fontWeight: 'bold' }}>Ventilation: {ventilationRate} breaths/min</span>\n            </div>\n            <input\n              type=\"range\"\n              min=\"5\"\n              max=\"20\"\n              value={ventilationRate}\n              onChange={(e) => setVentilationRate(parseInt(e.target.value))}\n              style={{ \n                width: '100%',\n                height: '20px',\n                accentColor: '#2ecc71'\n              }}\n            />\n            <div style={{ display: 'flex', justifyContent: 'space-between', fontSize: '0.8rem' }}>\n              <span>5</span>\n              <span>10</span>\n              <span>15</span>\n              <span>20</span>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Add the animation directly in style tag - updated for the blue pulse flash */}\n      <style dangerouslySetInnerHTML={{\n        __html: `\n          @keyframes pulse {\n            0% { background-color: #3498db; }\n            50% { background-color: #2980b9; }\n            100% { background-color: #3498db; }\n          }\n        `\n      }} />\n    </div>\n  );\n};\n\nexport default CPRTempoApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}