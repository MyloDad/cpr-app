{"ast":null,"code":"import React,{useEffect,useState,useRef}from'react';import{HeartPulse}from'lucide-react';import{useAppState}from'../../context/AppStateContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PulseCheckButton=()=>{const{activeSection,pulseCheckTime,pauseTime,pulseFlashing,showChargeMonitor,handlePulseCheckClick,COLORS}=useAppState();const[progressWidth,setProgressWidth]=useState(0);const[isVisible,setIsVisible]=useState(true);// Constants for pulse check timing\nconst PULSE_CHECK_DURATION=120;// 2:00 in seconds\nconst CHARGE_MONITOR_TIME=105;// 1:45 in seconds\n// Update progress width based on current time\nuseEffect(()=>{if(activeSection==='pulse'||activeSection==='pulse+metronome'){if(pulseCheckTime<PULSE_CHECK_DURATION){// Calculate progress percentage based on time elapsed\nif(pulseCheckTime<=CHARGE_MONITOR_TIME){const progressPercentage=pulseCheckTime/CHARGE_MONITOR_TIME*100;setProgressWidth(Math.min(progressPercentage,100));}else{// After 1:45, keep at 100%\nsetProgressWidth(100);}}else if(pauseTime>0){setProgressWidth(100);}}else{// Reset when not active\nsetProgressWidth(0);}},[activeSection,pulseCheckTime,pauseTime]);// Manual flashing effect\nuseEffect(()=>{if(!pulseFlashing){setIsVisible(true);return;}const flashInterval=setInterval(()=>{setIsVisible(prev=>!prev);},500);return()=>clearInterval(flashInterval);},[pulseFlashing]);// Common button styles\nconst buttonBaseStyle={border:'none',borderRadius:'8px',padding:'12px',cursor:'pointer',textAlign:'left',position:'relative',width:'100%',height:'84px',transition:'all 0.2s ease',boxShadow:'0 2px 4px rgba(0,0,0,0.2)',overflow:'hidden'};const isActive=activeSection==='pulse'||activeSection==='pulse+metronome';// Format the display time\nconst formatDisplayTime=()=>{if(!isActive)return\"2:00\";if(pulseCheckTime<PULSE_CHECK_DURATION){// Main countdown display (0:00 to 2:00)\nconst minutes=Math.floor(pulseCheckTime/60);const seconds=pulseCheckTime%60;return`${minutes}:${seconds.toString().padStart(2,'0')}`;}else{// Pause countdown display (0:00 to 0:10)\nconst minutes=Math.floor(pauseTime/60);const seconds=pauseTime%60;return`${minutes}:${seconds.toString().padStart(2,'0')}`;}};return/*#__PURE__*/_jsxs(\"button\",{onClick:handlePulseCheckClick,style:{...buttonBaseStyle,backgroundColor:!isActive?COLORS.background:pulseFlashing&&!isVisible?'white':COLORS.background,// Use COLORS.background instead of undefined\ncolor:isActive?pulseFlashing&&!isVisible?'#3498db':'white':COLORS.pulseBlue,border:isActive?'none':`1px solid ${COLORS.pulseBlue}`},children:[isActive&&/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',top:0,left:0,height:'100%',width:`${progressWidth}%`,backgroundColor:pulseFlashing&&!isVisible?'white':COLORS.pulseBlue,transition:'width 1s linear',zIndex:1}}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',height:'100%',position:'relative',zIndex:2,// Ensure content stays above the progress bar\ncolor:isActive?pulseFlashing&&!isVisible?'#3498db':'white':COLORS.pulseBlue},children:[/*#__PURE__*/_jsx(\"div\",{style:{marginRight:'15px',display:'flex',alignItems:'center'},children:/*#__PURE__*/_jsx(HeartPulse,{size:42})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'18px',fontWeight:'bold',marginBottom:'2px'},children:\"Pulse Check\"}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'14px',fontWeight:'bold',opacity:0.9},children:\"2-min countdown\"})]})]}),isActive&&/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',right:'12px',top:'50%',transform:'translateY(-50%)',fontSize:'22px',fontWeight:'bold',zIndex:2,// Ensure timer stays above the progress bar\ncolor:pulseFlashing&&!isVisible?'#3498db':'white'},children:formatDisplayTime()})]});};export default PulseCheckButton;","map":{"version":3,"names":["React","useEffect","useState","useRef","HeartPulse","useAppState","jsx","_jsx","jsxs","_jsxs","PulseCheckButton","activeSection","pulseCheckTime","pauseTime","pulseFlashing","showChargeMonitor","handlePulseCheckClick","COLORS","progressWidth","setProgressWidth","isVisible","setIsVisible","PULSE_CHECK_DURATION","CHARGE_MONITOR_TIME","progressPercentage","Math","min","flashInterval","setInterval","prev","clearInterval","buttonBaseStyle","border","borderRadius","padding","cursor","textAlign","position","width","height","transition","boxShadow","overflow","isActive","formatDisplayTime","minutes","floor","seconds","toString","padStart","onClick","style","backgroundColor","background","color","pulseBlue","children","top","left","zIndex","display","alignItems","marginRight","size","fontSize","fontWeight","marginBottom","opacity","right","transform"],"sources":["/Users/davidhelmers/arrestpro/src/components/Buttons/PulseCheckButton.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { HeartPulse } from 'lucide-react';\nimport { useAppState } from '../../context/AppStateContext';\n\nconst PulseCheckButton = () => {\n  const { \n    activeSection, \n    pulseCheckTime, \n    pauseTime,\n    pulseFlashing,\n    showChargeMonitor,\n    handlePulseCheckClick, \n    COLORS \n  } = useAppState();\n  \n  const [progressWidth, setProgressWidth] = useState(0);\n  const [isVisible, setIsVisible] = useState(true);\n  \n  // Constants for pulse check timing\n  const PULSE_CHECK_DURATION = 120; // 2:00 in seconds\n  const CHARGE_MONITOR_TIME = 105;  // 1:45 in seconds\n  \n  // Update progress width based on current time\n  useEffect(() => {\n    if (activeSection === 'pulse' || activeSection === 'pulse+metronome') {\n      if (pulseCheckTime < PULSE_CHECK_DURATION) {\n        // Calculate progress percentage based on time elapsed\n        if (pulseCheckTime <= CHARGE_MONITOR_TIME) {\n          const progressPercentage = (pulseCheckTime / CHARGE_MONITOR_TIME) * 100;\n          setProgressWidth(Math.min(progressPercentage, 100));\n        } else {\n          // After 1:45, keep at 100%\n          setProgressWidth(100);\n        }\n      } \n      else if (pauseTime > 0) {\n        setProgressWidth(100);\n      }\n    } else {\n      // Reset when not active\n      setProgressWidth(0);\n    }\n  }, [activeSection, pulseCheckTime, pauseTime]);\n\n  // Manual flashing effect\n  useEffect(() => {\n    if (!pulseFlashing) {\n      setIsVisible(true);\n      return;\n    }\n    \n    const flashInterval = setInterval(() => {\n      setIsVisible(prev => !prev);\n    }, 500);\n    \n    return () => clearInterval(flashInterval);\n  }, [pulseFlashing]);\n\n  // Common button styles\n  const buttonBaseStyle = {\n    border: 'none',\n    borderRadius: '8px',\n    padding: '12px',\n    cursor: 'pointer',\n    textAlign: 'left',\n    position: 'relative',\n    width: '100%',\n    height: '84px',\n    transition: 'all 0.2s ease',\n    boxShadow: '0 2px 4px rgba(0,0,0,0.2)',\n    overflow: 'hidden',\n  };\n  \n  const isActive = activeSection === 'pulse' || activeSection === 'pulse+metronome';\n  \n  // Format the display time\n  const formatDisplayTime = () => {\n    if (!isActive) return \"2:00\";\n    \n    if (pulseCheckTime < PULSE_CHECK_DURATION) {\n      // Main countdown display (0:00 to 2:00)\n      const minutes = Math.floor(pulseCheckTime / 60);\n      const seconds = pulseCheckTime % 60;\n      return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n    } else {\n      // Pause countdown display (0:00 to 0:10)\n      const minutes = Math.floor(pauseTime / 60);\n      const seconds = pauseTime % 60;\n      return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n    }\n  };\n\n  return (\n<button\n  onClick={handlePulseCheckClick}\n  style={{\n    ...buttonBaseStyle,\n    backgroundColor: !isActive \n      ? COLORS.background \n      : (pulseFlashing && !isVisible) \n        ? 'white' \n        : COLORS.background, // Use COLORS.background instead of undefined\n    color: isActive \n      ? (pulseFlashing && !isVisible) ? '#3498db' : 'white'\n      : COLORS.pulseBlue,\n    border: isActive \n      ? 'none' \n      : `1px solid ${COLORS.pulseBlue}`,\n  }}\n>\n  {/* Progress bar */}\n  {isActive && (\n    <div \n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        height: '100%',\n        width: `${progressWidth}%`,\n        backgroundColor: (pulseFlashing && !isVisible) ? 'white' : COLORS.pulseBlue,\n        transition: 'width 1s linear',\n        zIndex: 1\n      }}\n    />\n      )}\n      \n      {/* Button content - positioned above the progress bar */}\n      <div style={{ \n        display: 'flex', \n        alignItems: 'center', \n        height: '100%',\n        position: 'relative',\n        zIndex: 2, // Ensure content stays above the progress bar\n        color: isActive \n          ? (pulseFlashing && !isVisible) ? '#3498db' : 'white'\n          : COLORS.pulseBlue,\n      }}>\n        <div style={{ marginRight: '15px', display: 'flex', alignItems: 'center' }}>\n          <HeartPulse size={42} />\n        </div>\n        <div>\n          <div style={{ fontSize: '18px', fontWeight: 'bold', marginBottom: '2px' }}>\n            Pulse Check\n          </div>\n          <div style={{ fontSize: '14px', fontWeight: 'bold', opacity: 0.9 }}>\n            2-min countdown\n          </div>\n        </div>\n      </div>\n      \n      {isActive && (\n        <div style={{ \n          position: 'absolute',\n          right: '12px',\n          top: '50%',\n          transform: 'translateY(-50%)',\n          fontSize: '22px',\n          fontWeight: 'bold',\n          zIndex: 2, // Ensure timer stays above the progress bar\n          color: (pulseFlashing && !isVisible) ? '#3498db' : 'white'\n        }}>\n          {formatDisplayTime()}\n        </div>\n      )}\n    </button>\n  );\n};\n\nexport default PulseCheckButton;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,CAAEC,MAAM,KAAQ,OAAO,CAC1D,OAASC,UAAU,KAAQ,cAAc,CACzC,OAASC,WAAW,KAAQ,+BAA+B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE5D,KAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,KAAM,CACJC,aAAa,CACbC,cAAc,CACdC,SAAS,CACTC,aAAa,CACbC,iBAAiB,CACjBC,qBAAqB,CACrBC,MACF,CAAC,CAAGZ,WAAW,CAAC,CAAC,CAEjB,KAAM,CAACa,aAAa,CAAEC,gBAAgB,CAAC,CAAGjB,QAAQ,CAAC,CAAC,CAAC,CACrD,KAAM,CAACkB,SAAS,CAAEC,YAAY,CAAC,CAAGnB,QAAQ,CAAC,IAAI,CAAC,CAEhD;AACA,KAAM,CAAAoB,oBAAoB,CAAG,GAAG,CAAE;AAClC,KAAM,CAAAC,mBAAmB,CAAG,GAAG,CAAG;AAElC;AACAtB,SAAS,CAAC,IAAM,CACd,GAAIU,aAAa,GAAK,OAAO,EAAIA,aAAa,GAAK,iBAAiB,CAAE,CACpE,GAAIC,cAAc,CAAGU,oBAAoB,CAAE,CACzC;AACA,GAAIV,cAAc,EAAIW,mBAAmB,CAAE,CACzC,KAAM,CAAAC,kBAAkB,CAAIZ,cAAc,CAAGW,mBAAmB,CAAI,GAAG,CACvEJ,gBAAgB,CAACM,IAAI,CAACC,GAAG,CAACF,kBAAkB,CAAE,GAAG,CAAC,CAAC,CACrD,CAAC,IAAM,CACL;AACAL,gBAAgB,CAAC,GAAG,CAAC,CACvB,CACF,CAAC,IACI,IAAIN,SAAS,CAAG,CAAC,CAAE,CACtBM,gBAAgB,CAAC,GAAG,CAAC,CACvB,CACF,CAAC,IAAM,CACL;AACAA,gBAAgB,CAAC,CAAC,CAAC,CACrB,CACF,CAAC,CAAE,CAACR,aAAa,CAAEC,cAAc,CAAEC,SAAS,CAAC,CAAC,CAE9C;AACAZ,SAAS,CAAC,IAAM,CACd,GAAI,CAACa,aAAa,CAAE,CAClBO,YAAY,CAAC,IAAI,CAAC,CAClB,OACF,CAEA,KAAM,CAAAM,aAAa,CAAGC,WAAW,CAAC,IAAM,CACtCP,YAAY,CAACQ,IAAI,EAAI,CAACA,IAAI,CAAC,CAC7B,CAAC,CAAE,GAAG,CAAC,CAEP,MAAO,IAAMC,aAAa,CAACH,aAAa,CAAC,CAC3C,CAAC,CAAE,CAACb,aAAa,CAAC,CAAC,CAEnB;AACA,KAAM,CAAAiB,eAAe,CAAG,CACtBC,MAAM,CAAE,MAAM,CACdC,YAAY,CAAE,KAAK,CACnBC,OAAO,CAAE,MAAM,CACfC,MAAM,CAAE,SAAS,CACjBC,SAAS,CAAE,MAAM,CACjBC,QAAQ,CAAE,UAAU,CACpBC,KAAK,CAAE,MAAM,CACbC,MAAM,CAAE,MAAM,CACdC,UAAU,CAAE,eAAe,CAC3BC,SAAS,CAAE,2BAA2B,CACtCC,QAAQ,CAAE,QACZ,CAAC,CAED,KAAM,CAAAC,QAAQ,CAAGhC,aAAa,GAAK,OAAO,EAAIA,aAAa,GAAK,iBAAiB,CAEjF;AACA,KAAM,CAAAiC,iBAAiB,CAAGA,CAAA,GAAM,CAC9B,GAAI,CAACD,QAAQ,CAAE,MAAO,MAAM,CAE5B,GAAI/B,cAAc,CAAGU,oBAAoB,CAAE,CACzC;AACA,KAAM,CAAAuB,OAAO,CAAGpB,IAAI,CAACqB,KAAK,CAAClC,cAAc,CAAG,EAAE,CAAC,CAC/C,KAAM,CAAAmC,OAAO,CAAGnC,cAAc,CAAG,EAAE,CACnC,MAAO,GAAGiC,OAAO,IAAIE,OAAO,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,EAAE,CAC5D,CAAC,IAAM,CACL;AACA,KAAM,CAAAJ,OAAO,CAAGpB,IAAI,CAACqB,KAAK,CAACjC,SAAS,CAAG,EAAE,CAAC,CAC1C,KAAM,CAAAkC,OAAO,CAAGlC,SAAS,CAAG,EAAE,CAC9B,MAAO,GAAGgC,OAAO,IAAIE,OAAO,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,EAAE,CAC5D,CACF,CAAC,CAED,mBACFxC,KAAA,WACEyC,OAAO,CAAElC,qBAAsB,CAC/BmC,KAAK,CAAE,CACL,GAAGpB,eAAe,CAClBqB,eAAe,CAAE,CAACT,QAAQ,CACtB1B,MAAM,CAACoC,UAAU,CAChBvC,aAAa,EAAI,CAACM,SAAS,CAC1B,OAAO,CACPH,MAAM,CAACoC,UAAU,CAAE;AACzBC,KAAK,CAAEX,QAAQ,CACV7B,aAAa,EAAI,CAACM,SAAS,CAAI,SAAS,CAAG,OAAO,CACnDH,MAAM,CAACsC,SAAS,CACpBvB,MAAM,CAAEW,QAAQ,CACZ,MAAM,CACN,aAAa1B,MAAM,CAACsC,SAAS,EACnC,CAAE,CAAAC,QAAA,EAGDb,QAAQ,eACPpC,IAAA,QACE4C,KAAK,CAAE,CACLd,QAAQ,CAAE,UAAU,CACpBoB,GAAG,CAAE,CAAC,CACNC,IAAI,CAAE,CAAC,CACPnB,MAAM,CAAE,MAAM,CACdD,KAAK,CAAE,GAAGpB,aAAa,GAAG,CAC1BkC,eAAe,CAAGtC,aAAa,EAAI,CAACM,SAAS,CAAI,OAAO,CAAGH,MAAM,CAACsC,SAAS,CAC3Ef,UAAU,CAAE,iBAAiB,CAC7BmB,MAAM,CAAE,CACV,CAAE,CACH,CACE,cAGDlD,KAAA,QAAK0C,KAAK,CAAE,CACVS,OAAO,CAAE,MAAM,CACfC,UAAU,CAAE,QAAQ,CACpBtB,MAAM,CAAE,MAAM,CACdF,QAAQ,CAAE,UAAU,CACpBsB,MAAM,CAAE,CAAC,CAAE;AACXL,KAAK,CAAEX,QAAQ,CACV7B,aAAa,EAAI,CAACM,SAAS,CAAI,SAAS,CAAG,OAAO,CACnDH,MAAM,CAACsC,SACb,CAAE,CAAAC,QAAA,eACAjD,IAAA,QAAK4C,KAAK,CAAE,CAAEW,WAAW,CAAE,MAAM,CAAEF,OAAO,CAAE,MAAM,CAAEC,UAAU,CAAE,QAAS,CAAE,CAAAL,QAAA,cACzEjD,IAAA,CAACH,UAAU,EAAC2D,IAAI,CAAE,EAAG,CAAE,CAAC,CACrB,CAAC,cACNtD,KAAA,QAAA+C,QAAA,eACEjD,IAAA,QAAK4C,KAAK,CAAE,CAAEa,QAAQ,CAAE,MAAM,CAAEC,UAAU,CAAE,MAAM,CAAEC,YAAY,CAAE,KAAM,CAAE,CAAAV,QAAA,CAAC,aAE3E,CAAK,CAAC,cACNjD,IAAA,QAAK4C,KAAK,CAAE,CAAEa,QAAQ,CAAE,MAAM,CAAEC,UAAU,CAAE,MAAM,CAAEE,OAAO,CAAE,GAAI,CAAE,CAAAX,QAAA,CAAC,iBAEpE,CAAK,CAAC,EACH,CAAC,EACH,CAAC,CAELb,QAAQ,eACPpC,IAAA,QAAK4C,KAAK,CAAE,CACVd,QAAQ,CAAE,UAAU,CACpB+B,KAAK,CAAE,MAAM,CACbX,GAAG,CAAE,KAAK,CACVY,SAAS,CAAE,kBAAkB,CAC7BL,QAAQ,CAAE,MAAM,CAChBC,UAAU,CAAE,MAAM,CAClBN,MAAM,CAAE,CAAC,CAAE;AACXL,KAAK,CAAGxC,aAAa,EAAI,CAACM,SAAS,CAAI,SAAS,CAAG,OACrD,CAAE,CAAAoC,QAAA,CACCZ,iBAAiB,CAAC,CAAC,CACjB,CACN,EACK,CAAC,CAEb,CAAC,CAED,cAAe,CAAAlC,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}