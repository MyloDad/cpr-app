{"ast":null,"code":"var _jsxFileName = \"/Users/davidhelmers/arrestpro/src/components/Buttons/EpinephrineButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Syringe } from 'lucide-react';\nimport { useAppState } from '../../context/AppStateContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EpinephrineButton = () => {\n  _s();\n  const {\n    epiActive,\n    epiTime,\n    epiCycles,\n    epiFlashing,\n    handleEpinephrineClick,\n    COLORS\n  } = useAppState();\n\n  // State for progress bar width\n  const [progressWidth, setProgressWidth] = useState(0);\n\n  // Constants for epinephrine timing\n  const FULL_COLOR_TIME = 290; // 4:50 in seconds\n\n  // Update progress width based on current time\n  useEffect(() => {\n    if (epiActive) {\n      if (epiTime <= FULL_COLOR_TIME) {\n        // Calculate progress percentage based on time elapsed (0 to 290 seconds)\n        const progressPercentage = epiTime / FULL_COLOR_TIME * 100;\n        setProgressWidth(Math.min(progressPercentage, 100));\n      } else {\n        // After 4:50, keep at 100%\n        setProgressWidth(100);\n      }\n    } else {\n      // Reset when not active\n      setProgressWidth(0);\n    }\n  }, [epiActive, epiTime]);\n\n  // Common button styles\n  const buttonBaseStyle = {\n    border: 'none',\n    borderRadius: '8px',\n    padding: '12px',\n    cursor: 'pointer',\n    textAlign: 'left',\n    position: 'relative',\n    width: '100%',\n    height: '84px',\n    transition: 'all 0.2s ease',\n    boxShadow: '0 2px 4px rgba(0,0,0,0.2)',\n    overflow: 'hidden' // Important to contain the progress bar\n  };\n\n  // Format the time as MM:SS\n  const formatEpiTime = () => {\n    const minutes = Math.floor(epiTime / 60);\n    const seconds = epiTime % 60;\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleEpinephrineClick,\n    style: {\n      ...buttonBaseStyle,\n      backgroundColor: COLORS.background,\n      // Always keep background dark initially\n      color: epiActive ? COLORS.white : COLORS.ventGreen,\n      border: epiActive ? 'none' : `1px solid ${COLORS.ventGreen}`,\n      animation: epiFlashing ? 'flash 1s infinite' : 'none'\n    },\n    children: [epiActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        height: '100%',\n        width: `${progressWidth}%`,\n        backgroundColor: COLORS.ventGreen,\n        transition: 'width 1s linear',\n        zIndex: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        height: '100%',\n        position: 'relative',\n        zIndex: 2 // Ensure content stays above the progress bar\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginRight: '15px',\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Syringe, {\n          size: 42\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '18px',\n            fontWeight: 'bold',\n            marginBottom: '2px'\n          },\n          children: \"Epinephrine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '14px',\n            fontWeight: 'bold',\n            opacity: 0.9\n          },\n          children: epiActive ? \"Tap to add/restart cycle\" : \"Start timer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), epiActive && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '14px',\n            fontWeight: 'bold',\n            opacity: 0.9\n          },\n          children: [\"cycles: \", epiCycles]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), epiActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        right: '12px',\n        top: '50%',\n        transform: 'translateY(-50%)',\n        fontSize: '22px',\n        fontWeight: 'bold',\n        zIndex: 2 // Ensure timer stays above the progress bar\n      },\n      children: formatEpiTime()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(EpinephrineButton, \"0u1U1CExQsZ+VJxVaUypdebSzWQ=\", false, function () {\n  return [useAppState];\n});\n_c = EpinephrineButton;\nexport default EpinephrineButton;\nvar _c;\n$RefreshReg$(_c, \"EpinephrineButton\");","map":{"version":3,"names":["React","useState","useEffect","Syringe","useAppState","jsxDEV","_jsxDEV","EpinephrineButton","_s","epiActive","epiTime","epiCycles","epiFlashing","handleEpinephrineClick","COLORS","progressWidth","setProgressWidth","FULL_COLOR_TIME","progressPercentage","Math","min","buttonBaseStyle","border","borderRadius","padding","cursor","textAlign","position","width","height","transition","boxShadow","overflow","formatEpiTime","minutes","floor","seconds","toString","padStart","onClick","style","backgroundColor","background","color","white","ventGreen","animation","children","top","left","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","display","alignItems","marginRight","size","fontSize","fontWeight","marginBottom","opacity","right","transform","_c","$RefreshReg$"],"sources":["/Users/davidhelmers/arrestpro/src/components/Buttons/EpinephrineButton.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Syringe } from 'lucide-react';\nimport { useAppState } from '../../context/AppStateContext';\n\nconst EpinephrineButton = () => {\n  const { \n    epiActive, \n    epiTime,\n    epiCycles,\n    epiFlashing,\n    handleEpinephrineClick, \n    COLORS \n  } = useAppState();\n\n  // State for progress bar width\n  const [progressWidth, setProgressWidth] = useState(0);\n  \n  // Constants for epinephrine timing\n  const FULL_COLOR_TIME = 290; // 4:50 in seconds\n\n  // Update progress width based on current time\n  useEffect(() => {\n    if (epiActive) {\n      if (epiTime <= FULL_COLOR_TIME) {\n        // Calculate progress percentage based on time elapsed (0 to 290 seconds)\n        const progressPercentage = (epiTime / FULL_COLOR_TIME) * 100;\n        setProgressWidth(Math.min(progressPercentage, 100));\n      } else {\n        // After 4:50, keep at 100%\n        setProgressWidth(100);\n      }\n    } else {\n      // Reset when not active\n      setProgressWidth(0);\n    }\n  }, [epiActive, epiTime]);\n\n  // Common button styles\n  const buttonBaseStyle = {\n    border: 'none',\n    borderRadius: '8px',\n    padding: '12px',\n    cursor: 'pointer',\n    textAlign: 'left',\n    position: 'relative',\n    width: '100%',\n    height: '84px',\n    transition: 'all 0.2s ease',\n    boxShadow: '0 2px 4px rgba(0,0,0,0.2)',\n    overflow: 'hidden', // Important to contain the progress bar\n  };\n\n  // Format the time as MM:SS\n  const formatEpiTime = () => {\n    const minutes = Math.floor(epiTime / 60);\n    const seconds = epiTime % 60;\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <button\n      onClick={handleEpinephrineClick}\n      style={{\n        ...buttonBaseStyle,\n        backgroundColor: COLORS.background, // Always keep background dark initially\n        color: epiActive \n          ? COLORS.white \n          : COLORS.ventGreen,\n        border: epiActive \n          ? 'none' \n          : `1px solid ${COLORS.ventGreen}`,\n        animation: epiFlashing ? 'flash 1s infinite' : 'none'  \n      }}\n    >\n      {/* Progress bar */}\n      {epiActive && (\n        <div \n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            height: '100%',\n            width: `${progressWidth}%`,\n            backgroundColor: COLORS.ventGreen,\n            transition: 'width 1s linear',\n            zIndex: 1\n          }}\n        />\n      )}\n      \n      {/* Button content - positioned above the progress bar */}\n      <div style={{ \n        display: 'flex', \n        alignItems: 'center', \n        height: '100%',\n        position: 'relative',\n        zIndex: 2, // Ensure content stays above the progress bar\n      }}>\n        <div style={{ marginRight: '15px', display: 'flex', alignItems: 'center' }}>\n          <Syringe size={42} />\n        </div>\n        <div>\n          <div style={{ fontSize: '18px', fontWeight: 'bold', marginBottom: '2px' }}>\n            Epinephrine\n          </div>\n          <div style={{ fontSize: '14px', fontWeight: 'bold', opacity: 0.9 }}>\n            {epiActive ? \"Tap to add/restart cycle\" : \"Start timer\"}\n          </div>\n          {epiActive && \n            <div style={{ fontSize: '14px', fontWeight: 'bold', opacity: 0.9 }}>\n              cycles: {epiCycles}\n            </div>\n          }\n        </div>\n      </div>\n      \n      {epiActive && (\n        <div style={{ \n          position: 'absolute',\n          right: '12px',\n          top: '50%',\n          transform: 'translateY(-50%)',\n          fontSize: '22px',\n          fontWeight: 'bold',\n          zIndex: 2 // Ensure timer stays above the progress bar\n        }}>\n          {formatEpiTime()}\n        </div>\n      )}\n    </button>\n  );\n};\n\nexport default EpinephrineButton;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}