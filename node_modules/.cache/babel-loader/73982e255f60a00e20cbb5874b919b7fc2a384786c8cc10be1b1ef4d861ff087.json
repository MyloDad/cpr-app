{"ast":null,"code":"var _jsxFileName = \"/Users/davidhelmers/arrestpro/src/components/CPRTempoAppWrapper.js\",\n  _s = $RefreshSig$();\n//src/components/CPRTempoAppWrapper.js\n\nimport React, { useEffect } from 'react';\nimport { useAppState } from '../context/AppStateContext';\n\n// This is a wrapper component for your existing CPRTempoApp\n// It ensures the app refreshes properly when reset happens\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CPRTempoAppWrapper = ({\n  children\n}) => {\n  _s();\n  const {\n    refreshTrigger,\n    activeSection,\n    seconds,\n    ventilationActive,\n    epiActive\n  } = useAppState();\n\n  // Monitor key state values and log them\n  useEffect(() => {\n    console.log(\"CPRTempoApp state:\", {\n      refreshTrigger,\n      activeSection,\n      seconds,\n      ventilationActive,\n      epiActive\n    });\n  }, [refreshTrigger, activeSection, seconds, ventilationActive, epiActive]);\n\n  // Force component remount when refresh trigger changes\n  useEffect(() => {\n    if (refreshTrigger > 0) {\n      console.log(\"Handling refresh trigger:\", refreshTrigger);\n\n      // Force redraw of all components\n      const forceRedraw = () => {\n        document.body.style.display = 'none';\n        // Trigger layout recalculation\n        void document.body.offsetHeight;\n        document.body.style.display = '';\n      };\n      setTimeout(forceRedraw, 0);\n    }\n  }, [refreshTrigger]);\n  return (\n    /*#__PURE__*/\n    // Set key to refreshTrigger to force remount when it changes\n    _jsxDEV(\"div\", {\n      children: children\n    }, refreshTrigger, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(CPRTempoAppWrapper, \"SqcCRkG3eqKDNMzMQ+uCej7YaI4=\", false, function () {\n  return [useAppState];\n});\n_c = CPRTempoAppWrapper;\nexport default CPRTempoAppWrapper;\nvar _c;\n$RefreshReg$(_c, \"CPRTempoAppWrapper\");","map":{"version":3,"names":["React","useEffect","useAppState","jsxDEV","_jsxDEV","CPRTempoAppWrapper","children","_s","refreshTrigger","activeSection","seconds","ventilationActive","epiActive","console","log","forceRedraw","document","body","style","display","offsetHeight","setTimeout","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/davidhelmers/arrestpro/src/components/CPRTempoAppWrapper.js"],"sourcesContent":["//src/components/CPRTempoAppWrapper.js\n\nimport React, { useEffect } from 'react';\nimport { useAppState } from '../context/AppStateContext';\n\n// This is a wrapper component for your existing CPRTempoApp\n// It ensures the app refreshes properly when reset happens\nconst CPRTempoAppWrapper = ({ children }) => {\n  const { refreshTrigger, activeSection, seconds, ventilationActive, epiActive } = useAppState();\n  \n  // Monitor key state values and log them\n  useEffect(() => {\n    console.log(\"CPRTempoApp state:\", {\n      refreshTrigger,\n      activeSection,\n      seconds,\n      ventilationActive,\n      epiActive\n    });\n  }, [refreshTrigger, activeSection, seconds, ventilationActive, epiActive]);\n  \n  // Force component remount when refresh trigger changes\n  useEffect(() => {\n    if (refreshTrigger > 0) {\n      console.log(\"Handling refresh trigger:\", refreshTrigger);\n      \n      // Force redraw of all components\n      const forceRedraw = () => {\n        document.body.style.display = 'none';\n        // Trigger layout recalculation\n        void document.body.offsetHeight;\n        document.body.style.display = '';\n      };\n      \n      setTimeout(forceRedraw, 0);\n    }\n  }, [refreshTrigger]);\n  \n  return (\n    // Set key to refreshTrigger to force remount when it changes\n    <div key={refreshTrigger}>\n      {children}\n    </div>\n  );\n};\n\nexport default CPRTempoAppWrapper;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,4BAA4B;;AAExD;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM;IAAEC,cAAc;IAAEC,aAAa;IAAEC,OAAO;IAAEC,iBAAiB;IAAEC;EAAU,CAAC,GAAGV,WAAW,CAAC,CAAC;;EAE9F;EACAD,SAAS,CAAC,MAAM;IACdY,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE;MAChCN,cAAc;MACdC,aAAa;MACbC,OAAO;MACPC,iBAAiB;MACjBC;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACJ,cAAc,EAAEC,aAAa,EAAEC,OAAO,EAAEC,iBAAiB,EAAEC,SAAS,CAAC,CAAC;;EAE1E;EACAX,SAAS,CAAC,MAAM;IACd,IAAIO,cAAc,GAAG,CAAC,EAAE;MACtBK,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEN,cAAc,CAAC;;MAExD;MACA,MAAMO,WAAW,GAAGA,CAAA,KAAM;QACxBC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,OAAO,GAAG,MAAM;QACpC;QACA,KAAKH,QAAQ,CAACC,IAAI,CAACG,YAAY;QAC/BJ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,OAAO,GAAG,EAAE;MAClC,CAAC;MAEDE,UAAU,CAACN,WAAW,EAAE,CAAC,CAAC;IAC5B;EACF,CAAC,EAAE,CAACP,cAAc,CAAC,CAAC;EAEpB;IAAA;IACE;IACAJ,OAAA;MAAAE,QAAA,EACGA;IAAQ,GADDE,cAAc;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEnB;EAAC;AAEV,CAAC;AAAClB,EAAA,CArCIF,kBAAkB;EAAA,QAC2DH,WAAW;AAAA;AAAAwB,EAAA,GADxFrB,kBAAkB;AAuCxB,eAAeA,kBAAkB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}